<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Nginx内置变量</title>
    <url>/2023/12/15/Nginx%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h2 id="Nginx内置变量"><a href="#Nginx内置变量" class="headerlink" title="Nginx内置变量"></a>Nginx内置变量</h2><span id="more"></span>
<pre><code class="$args">$query_string            #同 $args
$arg_NAME                #GET请求中NAME的值
$is_args                 #如果请求中有参数，值为&quot;?&quot;，否则为空字符串
$uri                     #请求中的当前URI(不带请求参数，参数位于$args)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如&quot;/foo/bar.html&quot;。
$document_uri            #同 $uri
$document_root           #当前请求的文档根目录或别名
$host                    #优先级：HTTP请求行的主机名&gt;&quot;HOST&quot;请求头字段&gt;符合请求的服务器名
$hostname                #主机名
$https                   #如果开启了SSL安全模式，值为&quot;on&quot;，否则为空字符串。
$binary_remote_addr      #客户端地址的二进制形式，固定长度为4个字节
$body_bytes_sent         #传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的&quot;%B&quot;参数保持兼容
$bytes_sent              #传输给客户端的字节数
$connection              #TCP连接的序列号
$connection_requests     #TCP连接当前的请求数量
$content_length          #&quot;Content-Length&quot; 请求头字段
$content_type            #&quot;Content-Type&quot; 请求头字段
$cookie_name             #cookie名称
$limit_rate              #用于设置响应的速度限制
$msec                    #当前的Unix时间戳
$nginx_version           #nginx版本
$pid                     #工作进程的PID
$pipe                    #如果请求来自管道通信，值为&quot;p&quot;，否则为&quot;.&quot;
$proxy_protocol_addr     #获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串
$realpath_root           #当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径
$remote_addr             #客户端地址
$remote_port             #客户端端口
$remote_user             #用于HTTP基础认证服务的用户名
$request                 #代表客户端的请求地址
$request_body            #客户端的请求主体：此变量可在location中使用，将请求主体通过proxy_pass，fastcgi_pass，uwsgi_pass和scgi_pass传递给下一级的代理服务器
$request_body_file       #将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off，uwsgi_pass_request_body off，or scgi_pass_request_body off
$request_completion      #如果请求成功，值为&quot;OK&quot;，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空
$request_filename        #当前连接请求的文件路径，由root或alias指令与URI请求生成
$request_length          #请求的长度 (包括请求的地址，http请求头和请求主体)
$request_method          #HTTP请求方法，通常为&quot;GET&quot;或&quot;POST&quot;
$request_time            #处理客户端请求使用的时间; 从读取客户端的第一个字节开始计时
$request_uri             #这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：&quot;/cnphp/test.php?arg=freemouse&quot;
$scheme                  #请求使用的Web协议，&quot;http&quot; 或 &quot;https&quot;
$server_addr             #服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中
$server_name             #服务器名
$server_port             #服务器端口
$server_protocol         #服务器的HTTP版本，通常为 &quot;HTTP/1.0&quot; 或 &quot;HTTP/1.1&quot;
$status                  #HTTP响应代码
$time_iso8601            #服务器时间的ISO 8610格式
$time_local              #服务器时间（LOG Format 格式）
$cookie_NAME             #客户端请求Header头中的cookie变量，前缀&quot;$cookie_&quot;加上cookie名称的变量，该变量的值即为cookie名称的值
$http_NAME               #匹配任意请求头字段；变量名中的后半部分NAME可以替换成任意请求头字段，如在配置文件中需要获取http请求头：&quot;Accept-Language&quot;，$http_accept_language即可
$http_cookie
$http_post
$http_referer
$http_user_agent
$http_x_forwarded_for
$sent_http_NAME          #可以设置任意http响应头字段；变量名中的后半部分NAME可以替换成任意响应头字段，如需要设置响应头Content-length，$sent_http_content_length即可
$sent_http_cache_control
$sent_http_connection
$sent_http_content_type
$sent_http_keep_alive
$sent_http_last_modified
$sent_http_location
$sent_http_transfer_encoding```
</code></pre>
]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>shell中${}和()的使用</title>
    <url>/2023/12/15/shell%E4%B8%AD$%7B%7D%E5%92%8C()%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>shell中${}和()的使用</p>
<span id="more"></span>
<ol>
<li>截断功能<br>“${1^^}_DOC_CHANGE_PID”  #变量转换为大写<br>“${1,,}_DOC_CHANGE_PID”  #变量转换为小写<br>${!DOC_CHANGE_PID} #取变量的值<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file<span class="comment">#*/&#125;:       拿掉第一条/及其左边的字符串：dir1/dir2/dir3/my.file.txt</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file<span class="comment">##*/&#125;:    拿掉最后一条/及其左边的字符串：my.file.txt</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file<span class="comment">#*.&#125;:       拿掉第一个.及其左边的字符串：file.txt</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file<span class="comment">##*.&#125;:    拿掉最后一个.及其左边的字符串：txt</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file%/*&#125;:     拿掉最后条/及其右边的字符串：/dir1/dir2/dir3</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file%%/*&#125;: 拿掉第一条/及其右边的字符串：(空值)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file%.*&#125;:    拿掉最后一个.及其右边的字符串：/dir1/dir2/dir3/my.file</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">&#123;file%%.*&#125;: 拿掉第一个.及其右边的字符串：/dir1/dir2/dir3/my</span></span><br></pre></td></tr></table></figure>
记忆的方法为：<br>[list]#是去掉左边, ##最后一个<br>   %是去掉右边, %%第一个</li>
<li>字符串提取<br>单一符号是最小匹配﹔两个符号是最大匹配。<br>${file:0:5}：提取最左边的 5 个字节：&#x2F;dir1<br>${file:5:5}：提取第 5 个字节右边的连续 5 个字节：&#x2F;dir2</li>
<li>字符串替换<br>${file&#x2F;dir&#x2F;path}：将第一个 dir 提换为 path：&#x2F;path1&#x2F;dir2&#x2F;dir3&#x2F;my.file.txt<br>${file&#x2F;&#x2F;dir&#x2F;path}：将全部 dir 提换为 path：&#x2F;path1&#x2F;path2&#x2F;path3&#x2F;my.file.txt</li>
<li>针对不同的变量状态赋值(没设定、空值、非空值)：<br>${file-my.file.txt}: 若$file没有设定，则使用my.file.txt作返回值。(空值及非空值时不作处理)<br>${file:-my.file.txt}:若$file没有设定或为空值，则使用my.file.txt作返回值。(非空值时不作处理)<br>${file+my.file.txt}: 若$file设为空值或非空值，均使用my.file.txt作返回值。(没设定时不作处理)<br>${file:+my.file.txt}:若$file为非空值，则使用my.file.txt作返回值。(没设定及空值时不作处理)<br>${file&#x3D;my.file.txt}: 若$file没设定，则使用my.file.txt作返回值，同时将$file 赋值为 my.file.txt。(空值及非空值时不作处理)<br>${file:&#x3D;my.file.txt}:若$file没设定或为空值，则使用my.file.txt作返回值，同时将 $file 赋值为 my.file.txt。(非空值时不作处理)<br>${file?my.file.txt}: 若$file没设定，则将my.file.txt输出至 STDERR。(空值及非空值时不作处理)<br>${file:?my.file.txt}:若$file没设定或为空值，则将my.file.txt输出至STDERR。(非空值时不作处理)<br>注意:<br>“:+”的情况是不包含空值的.<br>“:-“, “:&#x3D;”等只要有号就是包含空值(null).</li>
<li>变量的长度<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;</span><span class="comment">#file&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>数组运算<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">A=(a b c def)</span></span><br><span class="line"><span class="language-xml">$</span><span class="template-variable">&#123;A[@]&#125;</span><span class="language-xml"> 或 $</span><span class="template-variable">&#123;A[*]&#125;</span><span class="language-xml"> 可得到 a b c def (全部组数)</span></span><br><span class="line"><span class="language-xml">$</span><span class="template-variable">&#123;A[0]&#125;</span><span class="language-xml"> 可得到 a (第一个组数)，$</span><span class="template-variable">&#123;A[1]&#125;</span><span class="language-xml"> 则为第二个组数...</span></span><br><span class="line"><span class="language-xml">$</span><span class="template-tag">&#123;#<span class="name">A</span>[@]&#125;</span><span class="language-xml"> 或 $</span><span class="template-tag">&#123;#<span class="name">A</span>[*]&#125;</span><span class="language-xml"> 可得到 4 (全部组数数量)</span></span><br><span class="line"><span class="language-xml">$</span><span class="template-tag">&#123;#<span class="name">A</span>[0]&#125;</span><span class="language-xml"> 可得到 1 (即第一个组数(a)的长度)，$</span><span class="template-tag">&#123;#<span class="name">A</span>[3]&#125;</span><span class="language-xml"> 可得到 3 (第四个组数(def)的长度)</span></span><br></pre></td></tr></table></figure>
7.例子<br>介绍下Shell中的${}、##和%%使用范例，本文给出了不同情况下得到的结果。<br>假设定义了一个变量为：<br>代码如下:<br>file&#x3D;&#x2F;dir1&#x2F;dir2&#x2F;dir3&#x2F;my.file.txt<br>可以用${ }分别替换得到不同的值：<br>${file#<em>&#x2F;}：删掉第一个 &#x2F; 及其左边的字符串：dir1&#x2F;dir2&#x2F;dir3&#x2F;my.file.txt<br>${file##</em>&#x2F;}：删掉最后一个 &#x2F;  及其左边的字符串：my.file.txt<br>${file#<em>.}：删掉第一个 .  及其左边的字符串：file.txt<br>${file##</em>.}：删掉最后一个 .  及其左边的字符串：txt<br>${file%&#x2F;<em>}：删掉最后一个  &#x2F;  及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3<br>${file%%&#x2F;</em>}：删掉第一个 &#x2F;  及其右边的字符串：(空值)<br>${file%.<em>}：删掉最后一个  .  及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3&#x2F;my.file<br>${file%%.</em>}：删掉第一个  .   及其右边的字符串：&#x2F;dir1&#x2F;dir2&#x2F;dir3&#x2F;my<br>记忆的方法为：<br># 是 去掉左边（键盘上#在 $ 的左边）<br>%是去掉右边（键盘上% 在$ 的右边）<br>单一符号是最小匹配；两个符号是最大匹配<br>${file:0:5}：提取最左边的 5 个字节：&#x2F;dir1<br>${file:5:5}：提取第 5 个字节右边的连续5个字节：&#x2F;dir2<br>也可以对变量值里的字符串作替换：<br>${file&#x2F;dir&#x2F;path}：将第一个dir 替换为path：&#x2F;path1&#x2F;dir2&#x2F;dir3&#x2F;my.file.txt<br>${file&#x2F;&#x2F;dir&#x2F;path}：将全部dir 替换为 path：&#x2F;path1&#x2F;path2&#x2F;path3&#x2F;my.file.txt</li>
</ol>
<p> </p>
<h5 id="shell中的-几种语法用法"><a href="#shell中的-几种语法用法" class="headerlink" title="shell中的(),{}几种语法用法"></a>shell中的(),{}几种语法用法</h5><p> <br>查看脚本语法是否有错误：<br>bash -n modify_suffix.sh<br>跟踪执行</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">sh -x modify_suffix.sh aaa</span><br><span class="line"><span class="number">1.</span>$&#123;var&#125; </span><br><span class="line"><span class="number">2.</span>$(cmd) </span><br><span class="line"><span class="number">3.</span>()和&#123;&#125; </span><br><span class="line"><span class="number">4.</span>$&#123;var:-<span class="keyword">string</span>&#125;,$&#123;var:+<span class="keyword">string</span>&#125;,$&#123;var:=<span class="keyword">string</span>&#125;,$&#123;var:?<span class="keyword">string</span>&#125; </span><br><span class="line"><span class="number">5.</span>$((<span class="keyword">exp</span>)) </span><br><span class="line"><span class="number">6.</span>$(var%pattern),$(var%%pattern),$(var#pattern),$(var##pattern)</span><br></pre></td></tr></table></figure>
<p>1.Shell中变量的原形：${var}<br> 但当你要显示变量值加随意的字符(我这里用_AA)时，就会出错<br>这时应该用变量的原形:${var},即是加一个大括号来限定变量名称的范围</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@bogon</span> sh]<span class="meta"># aa=<span class="string">&#x27;ajax&#x27;</span></span></span><br><span class="line">[root<span class="symbol">@bogon</span> sh]<span class="meta"># echo $aa</span></span><br><span class="line">ajax</span><br><span class="line">[root<span class="symbol">@bogon</span> sh]<span class="meta"># echo $aa_AA</span></span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@bogon</span> sh]<span class="meta"># echo $&#123;aa&#125;_AA</span></span><br><span class="line">ajax_AA</span><br></pre></td></tr></table></figure>
<p>批量修改一个目录里文件名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@bogon ~]<span class="comment"># cat modify_suffix.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">dst_path=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `<span class="built_in">ls</span> <span class="variable">$dst_path</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ -d <span class="variable">$1</span>/<span class="variable">$file</span> ]</span><br><span class="line">                 <span class="keyword">then</span> <span class="built_in">echo</span> `<span class="variable">$0</span> <span class="variable">$1</span>/<span class="variable">$file</span>`</span><br><span class="line">        <span class="keyword">elif</span> [ -f <span class="variable">$1</span>/<span class="variable">$file</span> ]</span><br><span class="line">                <span class="keyword">then</span>    <span class="built_in">mv</span> <span class="variable">$1</span>/<span class="variable">$file</span> <span class="variable">$1</span>/<span class="variable">$&#123;file&#125;</span>._mod</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$1</span>/<span class="variable">$&#123;file&#125;</span> is unknow file <span class="built_in">type</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure>
<p>.&#x2F;modify_suffix.sh  .&#x2F;f<br>将 .&#x2F;f 下的所有文件文件名添加了.mod</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@bogon</span> ~]<span class="meta"># file=<span class="string">&quot;modify_suffix.sh.tar.gz&quot;</span></span></span><br><span class="line">[root<span class="symbol">@bogon</span> ~]<span class="meta"># echo <span class="string">&quot;$&#123;file%%.*&#125;&quot;</span></span></span><br><span class="line">modify_suffix</span><br><span class="line">[root<span class="symbol">@bogon</span> ~]<span class="meta"># echo <span class="string">&quot;$&#123;file%.*&#125;&quot;</span></span></span><br><span class="line">modify_suffix.sh.tar</span><br><span class="line">[root<span class="symbol">@bogon</span> ~]<span class="meta"># echo <span class="string">&quot;$&#123;file#*.&#125;&quot;</span></span></span><br><span class="line">sh.tar.gz</span><br><span class="line">[root<span class="symbol">@bogon</span> ~]<span class="meta"># echo <span class="string">&quot;$&#123;file##*.&#125;&quot;</span></span></span><br><span class="line">gz</span><br></pre></td></tr></table></figure>
<p>2.$(cmd)</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">[root@bogon t]# <span class="keyword">ls</span></span><br><span class="line"><span class="number">1.</span>txt  <span class="number">2.</span>txt</span><br><span class="line">[root@bogon t]# echo $(<span class="keyword">ls</span>)</span><br><span class="line"><span class="number">1.</span>txt <span class="number">2.</span>txt</span><br></pre></td></tr></table></figure>
<p>echo $(ls) 执行过程<br>shell扫描一遍命令行,发现了$(cmd)结构,便将$(cmd)中的cmd执行一次,得到其标准输出,<br>再将此输出放到原来命令 echo $(ls)中的 $(ls)位置，即替换了$(ls),再执行echo命令<br>如下：<br>echo $(ls)被替换成了echo 1.txt 2.txt<br>这里要注意的是$(cmd)中的命令的错误输出是不会被替换的，替换的只是标准输出</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">[root@bogon <span class="built_in">t</span>]# <span class="built_in">var</span>=$(cat <span class="number">3</span>.txt)</span><br><span class="line">c<span class="symbol">at:</span> <span class="number">3</span>.<span class="built_in">t</span><span class="symbol">xt:</span> 没有那个文件或目录</span><br><span class="line">[root@bogon <span class="built_in">t</span>]# echo $<span class="built_in">var</span></span><br></pre></td></tr></table></figure>
<p>$var显然是空的<br>3、一串的命令执行()和{}<br>()和{}都是对一串的命令进行执行,但有所区别：<br>相同点：<br>()和{}都是把一串的命令放在括号里面,并且命令之间用;号隔开<br>不同点<br>()只是对一串命令重新开一个子shell进行执行,{}对一串命令在当前shell执行<br>()最后一个命令可以不用分号,{}最后一个命令要用分号<br>()里的第一个命令和左边括号不必有空格,{}的第一个命令和左括号之间必须要有一个空格<br>()和{}中括号里面的某个命令的重定向只影响该命令,但括号外的重定向则影响到括号里的所有命令</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">[root@bogon t]# var=test</span><br><span class="line">[root@bogon t]# echo $var</span><br><span class="line"><span class="keyword">test</span></span><br><span class="line"><span class="keyword"></span>[root@bogon t]# (var=notest;echo $var)</span><br><span class="line">notest</span><br><span class="line">[root@bogon t]# echo $var</span><br><span class="line"><span class="keyword">test</span></span><br><span class="line"><span class="keyword"></span>[root@bogon t]# &#123; var=notest;echo $var;&#125;</span><br><span class="line">notest</span><br><span class="line">[root@bogon t]# echo $var</span><br><span class="line">notest</span><br><span class="line">[root@bogon t]#</span><br></pre></td></tr></table></figure>
<p>在{}中 第一个命令和{之间必须有空格,结束必须有;<br>{}中的修改了$var的值 说明在当前shell执行</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@bogon</span> t]<span class="meta"># &#123; var1=test1<span class="comment">;var2=test2;echo $var1&gt;a;echo $var2;&#125;</span></span></span><br><span class="line">test2</span><br><span class="line">[root<span class="symbol">@bogon</span> t]<span class="meta"># cat a</span></span><br><span class="line">test1</span><br><span class="line">[root<span class="symbol">@bogon</span> t]<span class="meta"># &#123; var1=test1<span class="comment">;var2=test2;echo $var1;echo $var2;&#125;&gt;a</span></span></span><br><span class="line">[root<span class="symbol">@bogon</span> t]<span class="meta"># cat a</span></span><br><span class="line">test1</span><br><span class="line">test2</span><br></pre></td></tr></table></figure>
<p>脚本实例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">) | awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>4.几种特殊的替换结构：<br>${var:-string},${var:+string},${var:&#x3D;string},${var:?string}</p>
<ol>
<li>${var:-string} 和 ${var:&#x3D;string}<br>若变量var为空或者未定义,则用在命令行中用string来替换${var:-string}<br>否则变量var不为空时,则用变量var的值来替换${var:-string}<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $a</span></span><br><span class="line"></span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $&#123;a:-bcc&#125;</span></span><br><span class="line"><span class="keyword">bcc</span></span><br><span class="line"><span class="keyword"></span>[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $a</span></span><br><span class="line"></span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># a=ajax</span></span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $&#123;a:-bcc&#125;</span></span><br><span class="line">ajax</span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># unset a</span></span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $a</span></span><br><span class="line"></span><br><span class="line">[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $&#123;a:=bbc&#125;</span></span><br><span class="line"><span class="keyword">bbc</span></span><br><span class="line"><span class="keyword"></span>[root@<span class="keyword">bogon </span>~]<span class="comment"># echo $a</span></span><br><span class="line"><span class="keyword">bbc</span></span><br></pre></td></tr></table></figure>
发现<br>${var:-string}和${var:&#x3D;string}<br>比较 后者发现$var为空时,把string赋值给了var<br>后者是一种赋值默认值的常见做法</li>
<li>${var:+string}<br>规则和上面的完全相反<br>即只有当var不是空的时候才替换成string,若var为空时则不替换或者说是替换成变量var的值,即空值<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># a=ajax</span></span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># echo $a</span></span><br><span class="line">ajax</span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># echo $&#123;a:+bbc&#125;</span></span><br><span class="line">bbc</span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># echo $a</span></span><br><span class="line">ajax</span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># unset a</span></span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># echo $a</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># echo $&#123;a:+bbc&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">root@bogon ~</span>]<span class="meta"># </span></span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">3.</span> $&#123;<span class="keyword">var</span>:?<span class="built_in">string</span>&#125;</span><br><span class="line">替换规则:若变量<span class="keyword">var</span>不为空,则用变量<span class="keyword">var</span>的值来替换$&#123;<span class="keyword">var</span>:?<span class="built_in">string</span>&#125;</span><br><span class="line">若变量<span class="keyword">var</span>为空,则把<span class="built_in">string</span>输出到标准错误中,并从脚本中退出。</span><br><span class="line">可利用此特性来检查是否设置了变量的值</span><br></pre></td></tr></table></figure>
[root@bogon ~]# echo $a</li>
</ol>
<p>[root@bogon ~]# echo ${a:?bbc}<br>-bash: a: bbc<br>[root@bogon ~]# a&#x3D;ajax<br>[root@bogon ~]# echo ${a:?bbc}<br>ajax<br>[root@bogon ~]# a&#x3D;ajax<br>[root@bogon ~]# echo ${a:-<code>date</code>}<br>ajax<br>[root@bogon ~]# unset a<br>[root@bogon ~]# echo ${a:-<code>date</code>}<br>2017年 02月 21日 星期二 10:13:46 CST<br>[root@bogon ~]# echo ${a:-$(date)}<br>2017年 02月 21日 星期二 10:13:59 CST<br>[root@bogon ~]# b&#x3D;bbc<br>[root@bogon ~]# echo ${a:-$b}<br>bbc</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="number">5.</span> $((<span class="built_in">exp</span>)) POSIX标准的扩展计算</span><br><span class="line">这种计算是符合C语言的运算符,也就是说只要符合C的运算符都可用在$((<span class="built_in">exp</span>)),包括三目运算符</span><br><span class="line">注意:这种扩展计算是整数型的计算,不支持浮点型和字符串等</span><br><span class="line">若是逻辑判断,表达式<span class="built_in">exp</span>为真则为<span class="number">1</span>,假则为<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>[root@bogon ~]# echo $(3+2)<br>-bash: 3+2: 未找到命令</p>
<p>[root@bogon ~]# echo $((3+2))<br>5<br>[root@bogon ~]# echo $((3.5+2))<br>-bash: 3.5+2: 语法错误: 无效的算术运算符 （错误符号是 “.5+2”）<br>[root@bogon ~]# echo $((3&gt;2))<br>1<br>[root@bogon ~]# echo $((3&gt;2?’a’:’b’))<br>-bash: 3&gt;2?’a’:’b’: 语法错误: 期待操作数 （错误符号是 “‘a’:’b’”）<br>[root@bogon ~]# echo $((3&gt;2?a:b))<br>0<br>[root@bogon ~]# echo $((a&#x3D;3+2))<br>5<br>[root@bogon ~]# echo $((a++))<br>5<br>[root@bogon ~]# echo $a<br>6</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="section">6.四种模式匹配替换结构:</span></span><br></pre></td></tr></table></figure>
<p>${var%pattern}<br>${var%%pattern}<br>${var#pattern}<br>${var##pattern}</p>
<p>${var%pattern},${var%%pattern} 从右边开始匹配<br>${var#pattern},${var##pattern} 从左边开始匹配<br>${var%pattern} ,${var#pattern} 表示最短匹配,匹配到就停止,非贪婪<br>${var%%pattern},${var##pattern} 是最长匹配</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">只有在pattern中使用了通配符才能有最长最短的匹配,否则没有最 长最短匹配之分</span><br><span class="line">结构中的pattern支持通配符</span><br><span class="line">* 表示零个或多个任意字符</span><br><span class="line">?表示零个或一个任意字符</span><br><span class="line"><span class="string">[...]</span>表示匹配中括号里面的字符</span><br><span class="line"><span class="string">[!...]</span>表示不匹配中括号里面的字符</span><br></pre></td></tr></table></figure>
<p>[root@bogon ~]# f&#x3D;a.tar.gz<br>[root@bogon ~]# echo ${f##<em>.}<br>gz<br>[root@bogon ~]# echo ${f%%.</em>}<br>a<br>[root@bogon ~]# var&#x3D;abcdccbbdaa<br>[root@bogon ~]# echo ${var%%d*}<br>abc<br>[root@bogon ~]# echo ${var%d*}<br>abcdccbb<br>[root@bogon ~]# echo ${var#*d}<br>ccbbdaa<br>[root@bogon ~]# echo ${var##*d}<br>aa</p>
<pre><code>#发现输出的内容是var去掉pattern的那部分字符串的值

Shell $0, $#, $*, $@, $?, $$和命令行参数
$0  当前脚本的文件名 
$n  传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。 
$#  传递给脚本或函数的参数个数。 
$*  传递给脚本或函数的所有参数。 
$@  传递给脚本或函数的所有参数。被双引号(&quot; &quot;)包含时，与 $* 稍有不同，下面将会讲到。 
$?  上个命令的退出状态，或函数的返回值。 
$$  当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。

一、if的基本语法:
if [ command ];then
   符合该条件执行的语句
elif [ command ];then
   符合该条件执行的语句
else
   符合该条件执行的语句
fi
二、文件/文件夹(目录)判断
[ -b FILE ] 如果 FILE 存在且是一个块特殊文件则为真。
[ -c FILE ] 如果 FILE 存在且是一个字特殊文件则为真。
[ -d DIR ] 如果 FILE 存在且是一个目录则为真。
[ -e FILE ] 如果 FILE 存在则为真。
[ -f FILE ] 如果 FILE 存在且是一个普通文件则为真。
[ -g FILE ] 如果 FILE 存在且已经设置了SGID则为真。
[ -k FILE ] 如果 FILE 存在且已经设置了粘制位则为真。
[ -p FILE ] 如果 FILE 存在且是一个名字管道(F如果O)则为真。
[ -r FILE ] 如果 FILE 存在且是可读的则为真。
[ -s FILE ] 如果 FILE 存在且大小不为0则为真。
[ -t FD ] 如果文件描述符 FD 打开且指向一个终端则为真。
[ -u FILE ] 如果 FILE 存在且设置了SUID (set user ID)则为真。
[ -w FILE ] 如果 FILE存在且是可写的则为真。
[ -x FILE ] 如果 FILE 存在且是可执行的则为真。
[ -O FILE ] 如果 FILE 存在且属有效用户ID则为真。
[ -G FILE ] 如果 FILE 存在且属有效用户组则为真。
[ -L FILE ] 如果 FILE 存在且是一个符号连接则为真。
[ -N FILE ] 如果 FILE 存在 and has been mod如果ied since it was last read则为真。
[ -S FILE ] 如果 FILE 存在且是一个套接字则为真。
[ FILE1 -nt FILE2 ] 如果 FILE1 has been changed more recently than FILE2, or 如果 FILE1 exists and FILE2 does not则为真。
[ FILE1 -ot FILE2 ] 如果 FILE1 比 FILE2 要老, 或者 FILE2 存在且 FILE1 不存在则为真。
[ FILE1 -ef FILE2 ] 如果 FILE1 和 FILE2 指向相同的设备和节点号则为真。


三、字符串判断
[ -z STRING ] 如果STRING的长度为零则为真 ，即判断是否为空，空即是真；
[ -n STRING ] 如果STRING的长度非零则为真 ，即判断是否为非空，非空即是真；
[ STRING1 = STRING2 ] 如果两个字符串相同则为真 ；
[ STRING1 != STRING2 ] 如果字符串不相同则为真 ；
[ STRING1 ]　 如果字符串不为空则为真,与-n类似
</code></pre>
]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 8安装mysql</title>
    <url>/2023/12/20/centos%208%E5%AE%89%E8%A3%85mysql/</url>
    <content><![CDATA[<h5 id="centos-8-安装mysql"><a href="#centos-8-安装mysql" class="headerlink" title="centos 8 安装mysql"></a>centos 8 安装mysql</h5><span id="more"></span>
<h5 id="添加-MySQL-Yum-存储库"><a href="#添加-MySQL-Yum-存储库" class="headerlink" title="添加 MySQL Yum 存储库"></a>添加 MySQL Yum 存储库</h5><p>首先，将 MySQL Yum 存储库添加到系统的存储库列表中。这是一次性操作，可以通过安装 MySQL 提供的 RPM 来执行。按着这些次序:  </p>
<ol>
<li>转到 MySQL 开发人员专区中的下载 MySQL Yum 存储库页面(官方存储库)</li>
<li>为您的平台选择并下载发布包<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">wget https://link.zhihu.com/?<span class="keyword">target</span><span class="operator">=</span>https<span class="variable">%3</span>A//repo.mysql.com//mysql<span class="number">80</span>-community-<span class="keyword">release</span>-el<span class="number">7</span><span class="number">-1</span>.noarch.rpm</span><br><span class="line">rpm -ivh mysql<span class="number">80</span>-community-<span class="keyword">release</span>-el<span class="number">7</span><span class="number">-1</span>.noarch.rpm</span><br></pre></td></tr></table></figure>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">yum repolist <span class="keyword">all</span> |<span class="keyword">grep</span> mysql</span><br></pre></td></tr></table></figure>
<img src="/2023/12/20/centos%208%E5%AE%89%E8%A3%85mysql/1703038728264.jpg"><br>上面可以看到,默认启用的是80,因为我是要57版本的所以要设置一下,启用57,禁用80  <figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@ebs</span><span class="number">-132999</span> mysql]<span class="meta"># dnf config-manager --disable mysql80-community</span></span><br><span class="line">[root<span class="symbol">@ebs</span><span class="number">-132999</span> mysql]<span class="meta"># dnf config-manager --enable mysql57-community</span></span><br></pre></td></tr></table></figure>
<img src="/2023/12/20/centos%208%E5%AE%89%E8%A3%85mysql/1703038804134.jpg"></li>
</ol>
<h5 id="禁用默认-MySQL-模块"><a href="#禁用默认-MySQL-模块" class="headerlink" title="禁用默认 MySQL 模块"></a>禁用默认 MySQL 模块</h5><blockquote>
<p>官方解释<br>(仅限 EL8 系统）基于 EL8 的系统（例如 RHEL8 和 Oracle Linux 8）包含默认启用的 MySQL 模块。除非禁用此模块，否则它会屏蔽 MySQL 存储库提供的包。要禁用包含的模块并使 MySQL 存储库包可见，请使用以下命令（对于启用 dnf 的系统， 将命令中的 yum替换为dnf）：</p>
</blockquote>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">yum module <span class="built_in">disable</span> mysql</span><br></pre></td></tr></table></figure>
<p>安装mysql  </p>
<figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line">dnf install  mysql-community-<span class="keyword">server</span></span><br></pre></td></tr></table></figure>
<p>安装时提示证书异常<br><img src="/2023/12/20/centos%208%E5%AE%89%E8%A3%85mysql/1703038858140.jpg"></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">rpm --<span class="keyword">import</span> https:<span class="comment">//repo.mysql.com/RPM-GPG-KEY-mysql-2022</span></span><br></pre></td></tr></table></figure>
<p>官方解决办法(<a href="https://dev.mysql.com/doc/refman/8.0/en/checking-rpm-signature.html">https://dev.mysql.com/doc/refman/8.0/en/checking-rpm-signature.html</a>)</p>
<h5 id="启动并修改设置"><a href="#启动并修改设置" class="headerlink" title="启动并修改设置"></a>启动并修改设置</h5><p>修改data目录路径指向home  </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">datadir</span>=/home/mysql</span><br><span class="line"><span class="attr">socket</span>=/home/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line"><span class="attr">symbolic-links</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log-error</span>=/home/mysql/log/mysqld.log</span><br><span class="line"><span class="attr">pid-file</span>=/home/mysql/run/mysqld/mysqld.pid</span><br></pre></td></tr></table></figure>
<p>查看root初始密码  </p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&#x27;password&#x27;</span> /<span class="keyword">var</span>/<span class="built_in">log</span>/mysqld.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>本地或者远程连接不上，提示socket错误，注意是my.cnf中没有配置client  </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">socket</span>=/home/mysql/mysql.sock</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>shell安装脚本</title>
    <url>/2023/12/15/shell%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h4 id="shell安装脚本"><a href="#shell安装脚本" class="headerlink" title="shell安装脚本"></a>shell安装脚本</h4><span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment">#nginx 安装脚本</span></span><br><span class="line"><span class="comment">#解压和编译不能是同一个目录</span></span><br><span class="line"></span><br><span class="line">basedir=<span class="string">&#x27;/usr/local/&#x27;</span></span><br><span class="line">user=nginx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">Echo</span></span>()&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">    success)  flag=<span class="string">&quot;\033[1;32m&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    failure)  flag=<span class="string">&quot;\033[1;31m&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    warning)  flag=<span class="string">&quot;\033[1;33m&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    msg)  flag=<span class="string">&quot;\033[1;34m&quot;</span></span><br><span class="line">    ;;</span><br><span class="line">    *)  flag=<span class="string">&quot;\033[1;34m&quot;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">checkenv</span></span>()&#123;</span><br><span class="line">    <span class="comment">#环境预安装</span></span><br><span class="line">    yum -y install gcc gcc-c++ automake pcre pcre-devel zlib-devel openssl openssl-devel</span><br><span class="line">    <span class="built_in">mkdir</span> -p /var/tmp/nginx/client</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install</span></span>()&#123;</span><br><span class="line">    <span class="comment">#编译安装</span></span><br><span class="line">    checkenv</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> $(<span class="built_in">ls</span> ./)</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span>  [ <span class="string">&quot;<span class="variable">$&#123;file:0:5&#125;</span>&quot;</span> = <span class="string">&quot;nginx&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">                nginxdir=<span class="variable">$&#123;file&#125;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    wget -O nginx.tar.gz http://nginx.org/download/nginx-1.20.1.tar.gz &amp;&amp; tar -zxvf nginx.tar.gz &amp;&amp; <span class="built_in">rm</span> -rf nginx.tar.gz</span><br><span class="line">    <span class="built_in">pushd</span> <span class="variable">$&#123;nginxdir&#125;</span></span><br><span class="line">    ./configure --prefix=<span class="variable">$basedir</span>/nginx --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_sub_module --with-http_dav_module\</span><br><span class="line">    --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_random_index_module --with-http_secure_link_module\</span><br><span class="line">    --with-http_stub_status_module --with-http_auth_request_module --with-threads --with-stream --with-stream_ssl_module --with-http_slice_module --with-mail --with-mail_ssl_module\</span><br><span class="line">    --with-file-aio --with-http_v2_module --with-pcre</span><br><span class="line"></span><br><span class="line">    make -j<span class="variable">$&#123;Thread:-4&#125;</span> &amp;&amp; make install</span><br><span class="line">    <span class="built_in">ln</span> -sf <span class="variable">$basedir</span>/nginx/sbin/nginx /sbin/nginx</span><br><span class="line">    useradd -s /sbin/nologin -M <span class="variable">$user</span></span><br><span class="line">    <span class="comment">##启动脚本</span></span><br><span class="line">    <span class="built_in">cat</span> &gt; /usr/lib/systemd/system/nginx.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">    [Unit]</span></span><br><span class="line"><span class="string">    Description=nginx.service</span></span><br><span class="line"><span class="string">    After=network.target</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    [Service]</span></span><br><span class="line"><span class="string">    Type=forking</span></span><br><span class="line"><span class="string">    ExecStart=/usr/local/nginx/sbin/nginx</span></span><br><span class="line"><span class="string">    ExecReload=/usr/local/nginx/sbin/nginx -s reload</span></span><br><span class="line"><span class="string">    ExecStop=/usr/local/nginx/sbin/nginx -s stop</span></span><br><span class="line"><span class="string">    PrivateTmp=true</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    [Install]</span></span><br><span class="line"><span class="string">    WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">    <span class="comment">##开机启动</span></span><br><span class="line">    systemctl <span class="built_in">enable</span> nginx.service</span><br><span class="line">    systemctl start nginx.service</span><br><span class="line">    <span class="comment">## 更改/etc/profile文件</span></span><br><span class="line">    [ -z <span class="string">&quot;`grep ^&#x27;export PATH=&#x27; /etc/profile`&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;export PATH=<span class="variable">$&#123;basedir&#125;</span>/nginx/sbin:\$PATH&quot;</span> &gt;&gt; /etc/profile</span><br><span class="line">    <span class="built_in">sleep</span> 1</span><br><span class="line">    <span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;nginx install success&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;error，安装失败！&quot;</span></span><br><span class="line">        make clean</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line">install</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh密钥登录以及ssh-agent管理密钥</title>
    <url>/2023/12/18/ssh%E5%AF%86%E9%92%A5%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8Assh-agent%E7%AE%A1%E7%90%86%E5%AF%86%E9%92%A5/</url>
    <content><![CDATA[<blockquote>
<p>ssh密钥登录以及ssh-agent管理密钥 </p>
</blockquote>
<span id="more"></span>
<h5 id="1-生成密钥"><a href="#1-生成密钥" class="headerlink" title="1.生成密钥"></a>1.生成密钥</h5><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure>
<h5 id="2-安装密钥"><a href="#2-安装密钥" class="headerlink" title="2.安装密钥"></a>2.安装密钥</h5><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">ssh-<span class="keyword">copy</span><span class="language-bash">-<span class="built_in">id</span> -i ~/.ssh/id_rsa.pub zsy@10.1.0.3</span></span><br></pre></td></tr></table></figure>
<h5 id="3-取消密码登录"><a href="#3-取消密码登录" class="headerlink" title="3.取消密码登录"></a>3.取消密码登录</h5><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">yes</span>       #RSA身份验证:<span class="keyword">yes</span>开启<span class="keyword">no</span>关闭  若这项没有可忽略</span><br><span class="line">PubkeyAuthentication <span class="keyword">yes</span>    #公钥身份验证:<span class="keyword">yes</span>开启<span class="keyword">no</span>关闭</span><br><span class="line">PermitRootLogin <span class="keyword">yes</span>          #允许root登录:<span class="keyword">yes</span>开启<span class="keyword">no</span>关闭</span><br><span class="line">PasswordAuthentication <span class="keyword">no</span>   #密码登录方式:<span class="keyword">yes</span>开启<span class="keyword">no</span>关闭</span><br><span class="line"></span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>rewrite总结</title>
    <url>/2023/12/15/rewrite%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>rewrite总结</p>
<span id="more"></span>
<h4 id="web-config-适用iis7以上"><a href="#web-config-适用iis7以上" class="headerlink" title="web.config 适用iis7以上"></a>web.config 适用iis7以上</h4><h5 id="实例1-普通重写"><a href="#实例1-普通重写" class="headerlink" title="实例1:普通重写"></a>实例1:普通重写</h5><p>.htaccess转换web.config<br>注意:  </p>
<ol>
<li>添加&lt;match url&#x3D;”^(.&#x2F;)</li>
<li>添加 url&#x3D;”{R:1} 3.去掉 list.asp?teacher_id 转义符<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">rewrite</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">rules</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;rule1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;^(.*)t/([0-9,a-z]*)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;Rewrite&quot;</span> <span class="attr">url</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;R:1&#125;</span><span class="language-xml"><span class="tag"><span class="string">/t_list.asp?teacher_id=</span></span></span><span class="template-variable">&#123;R:2&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">appendQueryString</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;rule2&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;^(.*/)*([0-9]+)-([0-9]+)-([0-9]+)-([0-9]+)\.html\?*(.*)$&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;Rewrite&quot;</span> <span class="attr">url</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;R:1&#125;</span><span class="language-xml"><span class="tag"><span class="string">/index.php?moduleid=</span></span></span><span class="template-variable">&#123;R:2&#125;</span><span class="language-xml"><span class="tag"><span class="string"><span class="symbol">&amp;amp;</span>catid=</span></span></span><span class="template-variable">&#123;R:3&#125;</span><span class="language-xml"><span class="tag"><span class="string"><span class="symbol">&amp;amp;</span>itemid=</span></span></span><span class="template-variable">&#123;R:4&#125;</span><span class="language-xml"><span class="tag"><span class="string"><span class="symbol">&amp;amp;</span>page=</span></span></span><span class="template-variable">&#123;R:5&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">rewrite</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">system.webServer</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="实例2-其他重写功能"><a href="#实例2-其他重写功能" class="headerlink" title="实例2:其他重写功能"></a>实例2:其他重写功能</h5><ol>
<li>301重定向<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;301Redirect&quot;</span> stopProcessing<span class="operator">=</span><span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">  &lt;match url<span class="operator">=</span><span class="string">&quot;(.*)&quot;</span> /&gt;</span><br><span class="line">&lt;conditions logicalGrouping<span class="operator">=</span><span class="string">&quot;MatchAll&quot;</span>&gt;</span><br><span class="line">    &lt;add input<span class="operator">=</span><span class="string">&quot;&#123;HTTP_HOST&#125;&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;^xxx.com$&quot;</span> /&gt;</span><br><span class="line">    &lt;/conditions&gt;</span><br><span class="line">      &lt;action type<span class="operator">=</span><span class="string">&quot;Redirect&quot;</span> url<span class="operator">=</span><span class="string">&quot;http://www.xxx.com/&#123;R:0&#125;&quot;</span> redirectType<span class="operator">=</span><span class="string">&quot;Permanent&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;</span><br></pre></td></tr></table></figure></li>
<li>取消目录执行权限<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;rule1&quot;</span>&gt;</span><br><span class="line">      &lt;match url<span class="operator">=</span><span class="string">&quot;uploads/(.*).(php|asp|aspx)$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">      &lt;conditions logicalGrouping<span class="operator">=</span><span class="string">&quot;MatchAll&quot;</span>&gt;</span><br><span class="line">            &lt;add input<span class="operator">=</span><span class="string">&quot;%&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;^$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;false&quot;</span> negate<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">      &lt;/conditions&gt;</span><br><span class="line">      &lt;action type<span class="operator">=</span><span class="string">&quot;AbortRequest&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;</span><br><span class="line"></span><br><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;Rule2&quot;</span>&gt;</span><br><span class="line">      &lt;match url<span class="operator">=</span><span class="string">&quot;(.*).(asp)$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">      &lt;action type<span class="operator">=</span><span class="string">&quot;AbortRequest&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;</span><br></pre></td></tr></table></figure></li>
<li>屏蔽来源域名<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;rule1&quot;</span> stopProcessing<span class="operator">=</span><span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">      &lt;match url<span class="operator">=</span><span class="string">&quot;^(.*)$&quot;</span> /&gt;</span><br><span class="line">      &lt;conditions&gt;</span><br><span class="line">            &lt;add input<span class="operator">=</span><span class="string">&quot;&#123;HTTP_REFERER&#125;&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;ylhqvip.com&quot;</span> negate<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">            &lt;add input<span class="operator">=</span><span class="string">&quot;&#123;HTTP_REFERER&#125;&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;^$&quot;</span> negate<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">      &lt;/conditions&gt;</span><br><span class="line">      &lt;action type<span class="operator">=</span><span class="string">&quot;AbortRequest&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;</span><br></pre></td></tr></table></figure></li>
<li>防盗链<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;BlockDirectDownload&quot;</span> enabled<span class="operator">=</span><span class="string">&quot;true&quot;</span> stopProcessing<span class="operator">=</span><span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">    &lt;match url<span class="operator">=</span><span class="string">&quot;^.*\.(jpg|gif)$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">    &lt;conditions&gt;</span><br><span class="line">        &lt;add input<span class="operator">=</span><span class="string">&quot;&#123;HTTP_REFERER&#125;&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;^http://(.*\.)?(test\.com\.cn)/.*$&quot;</span> negate<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">    &lt;/conditions&gt;</span><br><span class="line">    &lt;action type<span class="operator">=</span><span class="string">&quot;Rewrite&quot;</span> url<span class="operator">=</span><span class="string">&quot;/404.txt&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;    </span><br></pre></td></tr></table></figure></li>
<li>屏蔽ip地址<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;band ip&quot;</span> <span class="attr">stopProcessing</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;(.*)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">conditions</span> <span class="attr">logicalGrouping</span>=<span class="string">&quot;MatchAny&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;%</span></span></span><span class="template-variable">&#123;HTTP_X_FORWARDED_FOR&#125;</span><span class="language-xml"><span class="tag"><span class="string"><span class="symbol">&amp;amp;</span>%</span></span></span><span class="template-variable">&#123;REMOTE_ADDR&#125;</span><span class="language-xml"><span class="tag"><span class="string"><span class="symbol">&amp;amp;</span>%</span></span></span><span class="template-variable">&#123;HTTP_X_Real_IP&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;(8.8.4.4|8.8.8.)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;AbortRequest&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li>过滤静态文件<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;Imported Rule 1&quot;</span> stopProcessing<span class="operator">=</span><span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">      &lt;match url<span class="operator">=</span><span class="string">&quot;^(.*)$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">      &lt;conditions logicalGrouping<span class="operator">=</span><span class="string">&quot;MatchAll&quot;</span>&gt;</span><br><span class="line">              &lt;add input<span class="operator">=</span><span class="string">&quot;&#123;URL&#125;&quot;</span> pattern<span class="operator">=</span><span class="string">&quot;^.*(.css|.js|.gif|.png|.jpg|.jpeg|.xml)&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">      &lt;/conditions&gt;</span><br><span class="line">      &lt;action type<span class="operator">=</span><span class="string">&quot;None&quot;</span> /&gt;</span><br><span class="line">&lt;/rule&gt;</span><br></pre></td></tr></table></figure></li>
<li>屏蔽蜘蛛<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;Block spider&quot;</span> <span class="attr">stopProcessing</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;(.*)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;HTTP_USER_AGENT&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;baiduspider|googlebot&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;AbortRequest&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span>  </span></span><br></pre></td></tr></table></figure></li>
<li>去掉QUERY_STRING<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;Bloc&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;^(.*)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;QUERY_STRING&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;from=singlemessage<span class="symbol">&amp;amp;</span>isappinstalled=0&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;Redirect&quot;</span> <span class="attr">url</span>=<span class="string">&quot;https://</span></span></span><span class="template-variable">&#123;HTTP_HOST&#125;</span><span class="language-xml"><span class="tag"><span class="string">/</span></span></span><span class="template-variable">&#123;R:0&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">appendQueryString</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">rule</span> <span class="attr">name</span>=<span class="string">&quot;已导入的规则 1&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">match</span> <span class="attr">url</span>=<span class="string">&quot;^category.php$&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;QUERY_STRING&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^id=90$&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">conditions</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">action</span> <span class="attr">type</span>=<span class="string">&quot;Redirect&quot;</span> <span class="attr">redirectType</span>=<span class="string">&quot;Permanent&quot;</span> <span class="attr">url</span>=<span class="string">&quot;http://www.xxxx.com&quot;</span> <span class="attr">appendQueryString</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">rule</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li>屏蔽对首页进行post</li>
</ol>
<h5 id="语法总结"><a href="#语法总结" class="headerlink" title="语法总结"></a>语法总结</h5><ol>
<li><add>条件判断,就像我们程序中的if语句一样,表示如果符合某个或某几个条件则执行action后的语句<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="language-xml">#判断访问域名:      <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;HTTP_HOST&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^www.xxx.com$&quot;</span> /&gt;</span>                           </span></span><br><span class="line"><span class="language-xml">#判断user_agent:   <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;HTTP_USER_AGENT&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;baiduspider|googlebot&quot;</span> /&gt;</span>                                      </span></span><br><span class="line"><span class="language-xml">#判断访问来源域名: <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;HTTP_REFERER&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;xxx.com&quot;</span>  /&gt;</span></span></span><br><span class="line"><span class="language-xml">#判断url中:        <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;URL&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^.*(.css|.js|.gif|.png|.jpg|.jpeg|.xml)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">#判断url中?后参数: <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;QUERY_STRING&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;blog&quot;</span> /&gt;</span>                                            </span></span><br><span class="line"><span class="language-xml">#判断url路径地址:  <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;REQUEST_URI&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;blog&quot;</span> /&gt;</span>   </span></span><br><span class="line"><span class="language-xml">#判断ip(包括代理): <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;%</span></span></span><span class="template-variable">&#123;HTTP_X_FORWARDED_FOR&#125;</span><span class="language-xml"><span class="tag"><span class="string">&amp;%</span></span></span><span class="template-variable">&#123;REMOTE_ADDR&#125;</span><span class="language-xml"><span class="tag"><span class="string">&amp;%</span></span></span><span class="template-variable">&#123;HTTP_X_Real_IP&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;(8.8.4.4|8.8.8.)&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">#判断真实文件:     <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;REQUEST_FILENAME&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">matchType</span>=<span class="string">&quot;IsFile&quot;</span> <span class="attr">negate</span>=<span class="string">&quot;true&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span>      </span></span><br><span class="line"><span class="language-xml">#判断真实目录:     <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;REQUEST_FILENAME&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">matchType</span>=<span class="string">&quot;IsDirectory&quot;</span> <span class="attr">negate</span>=<span class="string">&quot;true&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span> </span></span><br><span class="line"><span class="language-xml">#判断match中的变量:<span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;R:1&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^(bbs|blog)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span>  /&gt;</span></span></span><br><span class="line"><span class="language-xml">#判断method        <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;REQUEST_METHOD&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;(POST)&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span></span><br><span class="line"><span class="language-xml">#其他              <span class="tag">&lt;<span class="name">add</span> <span class="attr">input</span>=<span class="string">&quot;%&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;^$&quot;</span> <span class="attr">ignoreCase</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure></li>
<li><action>处理方式<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">禁止访问:         &lt;action <span class="built_in">type</span>=<span class="string">&quot;AbortRequest&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重定向到          &lt;action <span class="built_in">type</span>=<span class="string">&quot;Redirect&quot;</span> url=<span class="string">&quot;http://www.xxx.com&quot;</span> redirectType=<span class="string">&quot;Permanent&quot;</span> /&gt;</span>   </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重写到            &lt;action <span class="built_in">type</span>=<span class="string">&quot;Rewrite&quot;</span> url=<span class="string">&quot;&#123;R:1&#125;/t_list.asp?teacher_id=&#123;R:2&#125;&quot;</span> appendQueryString=<span class="string">&quot;false&quot;</span> /&gt;</span>  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">不做操作          &lt;action <span class="built_in">type</span>=<span class="string">&quot;None&quot;</span> /&gt;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">向客户端返回状态  &lt;action <span class="built_in">type</span>=<span class="string">&quot;CustomResponse&quot;</span> statusCode=<span class="string">&quot;403&quot;</span> statusReason=<span class="string">&quot;Forbidden&quot;</span> statusDescription=<span class="string">&quot;Forbidden&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li>
<li>参数<br>忽略大小写: ignoreCase&#x3D;”true”|ignoreCase&#x3D;”false”<br>非(不等于): negate&#x3D;”true”<br>不带?后面的参数: appendQueryString&#x3D;”false”<br>永久重定向: redirectType&#x3D;”Permanent”<br>匹配条件为所有还是一条: logicalGrouping&#x3D;”MatchAll”|logicalGrouping&#x3D;”MatchAny” # 用于conditions节点</li>
</ol>
<h4 id="htaccess-适用iis6-rewrite3-1-linux"><a href="#htaccess-适用iis6-rewrite3-1-linux" class="headerlink" title="htaccess 适用iis6(rewrite3.1)|linux"></a>htaccess 适用iis6(rewrite3.1)|linux</h4><ol>
<li>普通重写<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;IfModule mod_rewrite.c&gt;</span></span><br><span class="line">          <span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line">          <span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^(.*)$</span><br><span class="line">          <span class="attribute">RewriteRule</span> ^topic-(.+)\.html$ portal.php?mod=topic&amp;topic=$<span class="number">1</span>&amp;%<span class="number">1</span></span><br><span class="line">          <span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^(.*)$</span><br><span class="line">          <span class="attribute">RewriteRule</span> ^article-([<span class="number">0</span>-<span class="number">9</span>]+)-([<span class="number">0</span>-<span class="number">9</span>]+)\.html$ portal.php?mod=view&amp;aid=$<span class="number">1</span>&amp;page=$<span class="number">2</span>&amp;%<span class="number">1</span></span><br><span class="line">          <span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^(.*)$</span><br><span class="line">          <span class="attribute">RewriteRule</span> ^forum-(\w+)-([<span class="number">0</span>-<span class="number">9</span>]+)\.html$ forum.php?mod=forumdisplay&amp;fid=$<span class="number">1</span>&amp;page=$<span class="number">2</span>&amp;%<span class="number">1</span></span><br><span class="line"><span class="section">&lt;/IfModule&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)/topic-(.+)\.html(\?(.*))*$ $<span class="number">1</span>/portal\.php\?mod=topic&amp;topic=$<span class="number">2</span>&amp;$<span class="number">4</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)/article-([<span class="number">0</span>-<span class="number">9</span>]+)-([<span class="number">0</span>-<span class="number">9</span>]+)\.html(\?(.*))*$ $<span class="number">1</span>/portal\.php\?mod=view&amp;aid=$<span class="number">2</span>&amp;page=$<span class="number">3</span>&amp;$<span class="number">5</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)/forum-(\w+)-([<span class="number">0</span>-<span class="number">9</span>]+)\.html(\?(.*))*$ $<span class="number">1</span>/forum\.php\?mod=forumdisplay&amp;fid=$<span class="number">2</span>&amp;page=$<span class="number">3</span>&amp;$<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attribute">RewriteRule</span> ^ac/([<span class="number">0</span>-<span class="number">9</span>]+)\.html$  /content/$<span class="number">1</span>.htm<span class="meta"> [R=301,L]</span></span><br></pre></td></tr></table></figure></li>
<li>动态地址跳转到静态地址<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteRule</span> ^goods-([<span class="number">0</span>-<span class="number">9</span>]+)(.*)\.html$  goods\.php\?id=$<span class="number">1</span><span class="meta"> [QSA,L]</span></span><br><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^id=([<span class="number">0</span>-<span class="number">9</span>]+)$<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^goods.php$ /goods-%<span class="number">1</span>.html?<span class="meta"> [L,R=301]</span></span><br><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^id=<span class="number">1</span>$<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^category.php$ http://www.yaolongnonwoven.com/?<span class="meta"> [L,R=301] 加?不带参数,不加带上参数</span></span><br></pre></td></tr></table></figure></li>
<li>301重定向<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="title class_">RewriteCond</span> <span class="string">%&#123;HTTP_HOST&#125;</span> ^xxxx1.com<span class="variable">$ </span>[<span class="variable constant_">NC</span>] </span><br><span class="line"><span class="title class_">RewriteCond</span> <span class="string">%&#123;HTTP_HOST&#125;</span> ^xxxx2.com<span class="variable">$ </span>[<span class="variable constant_">NC</span>] </span><br><span class="line"><span class="title class_">RewriteRule</span> ^(.*)<span class="variable">$ </span><span class="symbol">http:</span>/<span class="regexp">/www.xxxx1.com/</span><span class="variable">$1</span> [R=<span class="number">301</span>,L]</span><br></pre></td></tr></table></figure></li>
<li>取消目录执行权限<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteEngine</span> <span class="literal">On</span></span><br><span class="line"><span class="attribute">RewriteCond</span> % !^$   </span><br><span class="line"><span class="attribute">RewriteRule</span> uploads/(.*).(php)$ –<span class="meta"> [F]   </span></span><br><span class="line"><span class="meta">RewriteRule data/(.*).(php)$ – [F]</span></span><br></pre></td></tr></table></figure></li>
<li>屏蔽来源域名<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;HTTP_REFERER&#125;</span> www.baidu.com<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)$ -<span class="meta"> [F]</span></span><br></pre></td></tr></table></figure></li>
<li>屏蔽ip地址<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;http:X-Forwarded-For&#125;</span>&amp;<span class="variable">%&#123;REMOTE_ADDR&#125;</span>&amp;<span class="variable">%&#123;http:X-Real-IP&#125;</span> (<span class="number">8.8.4.4</span>|<span class="number">8</span>.<span class="number">8</span>.<span class="number">8</span>.)<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> (.*) -<span class="meta"> [F]</span></span><br></pre></td></tr></table></figure></li>
<li>过滤静态文件<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">RewriteCond %&#123;REQUEST_URI&#125; ^.*(.css|<span class="type">.js</span>|<span class="type">.gif</span>|<span class="type">.png</span>|<span class="type">.jpg</span>|<span class="type">.jpeg</span>|<span class="type">.xml</span>)</span><br><span class="line">RewriteRule ^(.*)$   - [L] </span><br><span class="line"></span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-f     </span><br><span class="line">RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br></pre></td></tr></table></figure></li>
<li>屏蔽蜘蛛<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;HTTP_USER_AGENT&#125;</span> (baiduspider|googlebot)<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> ^(.*)$ -<span class="meta"> [F]</span></span><br></pre></td></tr></table></figure></li>
<li>去掉包含特征的QUERY_STRING<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">RewriteCond</span> <span class="variable">%&#123;QUERY_STRING&#125;</span> ^/(.*)$<span class="meta"> [NC]</span></span><br><span class="line"><span class="attribute">RewriteRule</span> (.*) http://www.whjiangying.com/?<span class="meta"> [L,R=301</span></span><br></pre></td></tr></table></figure></li>
<li>做好伪静态后要将动态地址转向静态地址<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">已有一条伪静态</span><br><span class="line"><span class="title class_">RewriteRule</span> ^goods-([<span class="number">0</span>-<span class="number">9</span>]+)(.*).html<span class="variable">$ </span>goods.php?id=<span class="variable">$1</span> [<span class="variable constant_">QSA</span>,L]</span><br><span class="line"><span class="title class_">RewriteCond</span> <span class="string">%&#123;QUERY_STRING&#125;</span> ^id=([<span class="number">0</span>-<span class="number">9</span>]+)<span class="variable">$ </span>[<span class="variable constant_">NC</span>]</span><br><span class="line"><span class="title class_">RewriteRule</span> ^goods.php<span class="variable">$ </span>/goods-%<span class="number">1</span>.html? [L,R=<span class="number">301</span>]</span><br><span class="line"><span class="title class_">RewriteCond</span> <span class="string">%&#123;QUERY_STRING&#125;</span> ^id=<span class="number">1</span><span class="variable">$ </span>[<span class="variable constant_">NC</span>]</span><br><span class="line"><span class="title class_">RewriteRule</span> ^category.php<span class="variable">$ </span><span class="symbol">http:</span>/<span class="regexp">/www.yaolongnonwoven.com/</span>? [L,R=<span class="number">301</span>] 加<span class="string">?不</span>带参数,不加带上参数</span><br></pre></td></tr></table></figure></li>
<li>排除某个文件夹<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">方法<span class="number">1</span>：</span><br><span class="line">RewriteRule ^(statics|<span class="type">api</span>|<span class="type">uploadfile</span>|<span class="type">)(.*) - [L</span>]</span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line">RewriteCond $<span class="number">1</span> !^(search|<span class="type">list</span>|<span class="type">view</span>|<span class="type">api</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="语法总结-1"><a href="#语法总结-1" class="headerlink" title="语法总结"></a>语法总结</h5><ol>
<li>RewriteCond条件判断,就像我们程序中的if语句一样，表示如果符合某个或某几个条件则执行RewriteCond下面紧邻的RewriteRule语句<br> #判断访问域名: RewriteCond %{HTTP_HOST} ^xxxx.com$ [NC]<br> #判断user_agent: RewriteCond %{HTTP_USER_AGENT} Baiduspider [NC]<br> #判断访问来源域名: RewriteCond %{HTTP_REFERER} <a href="http://www.baidu.com/">www.baidu.com</a> [NC]<br> #判断METHOD: RewriteCond %{REQUEST_METHOD} ^(TRACE|OPTIONS|GET|POST)<br> #判断url中?后参数: RewriteCond %{QUERY_STRING} ^id&#x3D;([0-9]+)$ [NC]<br> #判断url路径地址: RewriteCond %{REQUEST_URI} ^&#x2F;bbs<br> #判断ip(包括代理): RewriteCond %{http:X-Forwarded-For}&amp;%{REMOTE_ADDR}&amp;%{http:X-Real-IP} (8.8.4.4|8.8.8.) [NC]<br> #判断真实文件: RewriteCond %{REQUEST_FILENAME} !-f<br> #判断真实目录: RewriteCond %{REQUEST_FILENAME} !-d<br> #判断header RewriteCond %{HTTP:header}<br> #判断以上所有情况: RewriteCond $1 !^(bbs|blog)<br> #其他 RewriteCond % !^$</li>
<li>处理方式<br> #禁止访问: RewriteRule (.) - [F]<br> #重定向到 RewriteRule ^(.)$ <a href="http://www.xxx.com/404.html">http://www.xxx.com/404.html</a> [R&#x3D;301,L]<br> #重写到 RewriteRule ^goods-([0-9]+)(.<em>).html$ goods.php?id&#x3D;$1 [QSA,L]<br> #不做操作 RewriteRule ^(.</em>)$ - [L]<br> 参数解释:<br> $N 规则后向引用<br> %N RewriteCond 后向引用<br> ${mapname:key|default}<br> %{VARNAME} 服务器变量<br> ‘!’ 取非<br> [C] 与下一个规则联锁<br> [CO&#x3D;name:val:domain:lifetime:path] 设置cookie<br> [F] 强制禁止应答<br> [G] 强制继续应答<br> [H&#x3D;content-handler] 明确的内容处理 (不适用)<br> [L] 上一个规则标记<br> [N] 再次应用规则<br> [NC] 大小写不敏感<br> [NE] 不转义输出<br> [NS]非内部子请求<br> [P]代理通过<br> [QSA] 追加查询字符串<br> [R &#x3D;code] 重定向<br> [S&#x3D;num] 跳到下面第n条规则<br> [T&#x3D;MIME-type] 强制明确应答 MIME 类型<br> RewriteCond<br> [NC] 大小写不敏感<br> [OR] 逻辑并集</li>
</ol>
<h4 id="nginx-规则"><a href="#nginx-规则" class="headerlink" title="nginx 规则"></a>nginx 规则</h4><h5 id="普通重写"><a href="#普通重写" class="headerlink" title="普通重写"></a>普通重写</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line"><span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123; </span><br><span class="line">rewrite  ^(.*)$  /index.php?s=<span class="variable">$1</span>  last; </span><br><span class="line"><span class="built_in">break</span>;   </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>301重定向<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^</span> https://example.com<span class="variable">$request_uri</span>? <span class="literal">permanent</span>;</span><br><span class="line"><span class="attribute">return</span> <span class="number">301</span> https://example.com<span class="variable">$request_uri</span>;</span><br><span class="line"><span class="attribute">server_name</span> test.com www.test.com; </span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$host</span> <span class="regexp">~* test.com)</span> &#123; </span><br><span class="line">    <span class="attribute">rewrite</span><span class="regexp"> ^/(.*)$</span> http://www.test.com/<span class="variable">$1</span> <span class="literal">permanent</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>http跳转https<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">rewrite ^(.*) https:<span class="regexp">//</span>www.abc.com<span class="variable">$1</span> permanent; </span><br><span class="line">有cdn</span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$http_from_https</span> != <span class="string">&#x27;on&#x27;</span> )&#123;</span><br><span class="line">     rewrite ^(.*) https:<span class="regexp">//</span>www.abc.com<span class="variable">$1</span> permanent;      </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li>
<li>取消目录执行权限 <figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">location</span> <span class="title">~* ^/(uploads</span>|templets|data)/.*.(php|php5)$ &#123;</span><br><span class="line">               <span class="keyword">deny</span>  all;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li>
<li>屏蔽来源域名<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> / &#123;</span><br><span class="line">            <span class="attribute">valid_referers</span> www.baidu.com www.<span class="number">360</span>.cn;</span><br><span class="line">            <span class="attribute">if</span> (<span class="variable">$invalid_referer</span>)&#123;</span><br><span class="line">                    <span class="attribute">return</span> <span class="number">403</span>/<span class="number">444</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li>防盗链<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~* .(gif|jpg|png|webp)$</span> &#123;</span><br><span class="line"><span class="attribute">valid_referers</span> <span class="literal">none</span> <span class="literal">blocked</span> domain.com <span class="regexp">*.domain.com</span> server_names ~.google. ~.baidu.;</span><br><span class="line"><span class="attribute">if</span> (<span class="variable">$invalid_referer</span>) &#123;</span><br><span class="line"><span class="attribute">return</span> <span class="number">403</span>/<span class="number">444</span>;</span><br><span class="line"><span class="comment">#rewrite ^/ http://www.domain.com/403.jpg;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">root</span> /opt/www/image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>屏蔽ip地址<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">allow</span> <span class="number">1.1.1.2</span>;</span><br><span class="line"><span class="attribute">allow</span> all;</span><br><span class="line"><span class="attribute">deny</span> all;</span><br><span class="line"><span class="attribute">deny</span> <span class="number">1.1.1.2</span></span><br><span class="line"></span><br><span class="line">location<span class="regexp"> ^~</span> /xxx/xxx/xx/</span><br><span class="line">&#123;</span><br><span class="line"><span class="attribute">allow</span> <span class="number">172.0.0.1</span>;</span><br><span class="line"><span class="attribute">allow</span> xxx.xxx.<span class="number">0</span>.<span class="number">0</span>/<span class="number">8</span>;<span class="comment">#表示允许xxx.xxx.0.1 ~ xxx.xxx.255.254</span></span><br><span class="line"><span class="attribute">allow</span> xxx.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>/<span class="number">16</span>;<span class="comment">#表示允许xxx.0.0.1 ~ xxx.255.255.254</span></span><br><span class="line"><span class="attribute">allow</span> xxx.xxx.xxx.x;</span><br><span class="line"><span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>前端还有cdn情况<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">map <span class="variable">$http_x_forwarded_for</span> <span class="variable">$clientIp</span> &#123;</span><br><span class="line">“” <span class="variable">$remote_addr</span>;</span><br><span class="line">~^(<span class="string">?P</span>[<span class="number">0</span>-<span class="number">9</span>.]+),<span class="string">?.</span><span class="variable">$ </span><span class="variable">$firstAddr</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$clientIp</span> ~ “<span class="number">127.0</span>.<span class="number">0.1</span>|<span class="params">127.0.0.2”) &#123;</span></span><br><span class="line"><span class="params"><span class="keyword">return</span> 403/444;</span></span><br><span class="line"><span class="params"><span class="keyword">break</span>;</span></span><br><span class="line"><span class="params">&#125;</span></span><br></pre></td></tr></table></figure></li>
<li>屏蔽蜘蛛<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$http_user_agent</span> <span class="regexp">~ &quot;AhrefsBot|FeedDemon|JikeSpider|MJ12bot|heritrix|EasouSpider|LinkpadBot|Ezooms&quot;</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">444</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>禁止非GET|HEAD|POST方式的抓取<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">if</span> (<span class="variable">$request_method</span> !<span class="regexp">~ ^(GET|HEAD|POST)$)</span> &#123;</span><br><span class="line">  <span class="attribute">return</span> <span class="number">403</span>/<span class="number">444</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
<li>去掉query_string<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$query_string</span> ~ doc-view-<span class="number">7521</span>.html=<span class="variable">$)</span>&#123;</span><br><span class="line">     rewrite ^<span class="regexp">/$ /</span>? permanent;</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
<li>禁止脚本运行<figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">&lt;rule name<span class="operator">=</span><span class="string">&quot;deny Script &quot;</span>&gt;</span><br><span class="line">              &lt;match url<span class="operator">=</span><span class="string">&quot;(.*)(config|UploadFiles|Runtime|Framework|skin|data|pdf|banner|cert|uploadfile|html|style|styles|img|image|images|pics|upload|uploads|themes|templets|templates|css|js|cer|sound|fonts|javascripts|flash|media|stylesheets)/(.*).(asp|php|aspx|cer)$&quot;</span> ignoreCase<span class="operator">=</span><span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">              &lt;action type<span class="operator">=</span><span class="string">&quot;AbortRequest&quot;</span> /&gt;</span><br><span class="line">    &lt;/rule&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="语法总结-2"><a href="#语法总结-2" class="headerlink" title="语法总结"></a>语法总结</h5><ul>
<li><p>if条件判断<br>  #判断访问域名: if ($host * test.com)<br>  #判断user_agent: if ($http_user_agent ~* “baiduspider” )<br>  #判断访问来源域名: valid_referers <a href="http://www.baidu.com;if/">www.baidu.com;if</a> ($invalid_referer){return 403;}<br>  #判断METHOD: if ($request_method ! ^(GET|HEAD|POST)$)<br>  #判断url中?后参数: if ($args ~* ^&#x2F;list.php?([^]+)([0-9]+)$)<br>  #判断url路径地址: if ($uri ~* ^&#x2F;list.php?([^]+)([0-9]+)$)<br>  #判断ip: if ($remote_addr ~* “127.0.0.1|127.0.0.2”)<br>  #判断真实文件: -e filename<br>  #判断真实目录: -d filename</p>
</li>
<li><p>处理方式<br>  #禁止访问: return 403&#x2F;444; deny all;<br>  #重定向到 rewrite ^&#x2F;(.)$ <a href="http://www.test.com/$1">http://www.test.com/$1</a> permanent;<br>  #重写到 rewrite ^(.)$ &#x2F;index.php?s&#x3D;$1 last;<br>  last – 基本上都用这个Flag。<br>  break – 中止Rewirte，不在继续匹配<br>  redirect – 返回临时重定向的HTTP状态302<br>  permanent – 返回永久重定向的HTTP状态301</p>
<p>  -f和!-f用来判断是否存在文件<br>  -d和!-d用来判断是否存在目录<br>  -e和!-e用来判断是否存在文件或目录<br>  -x和!-x用来判断文件是否可执行</p>
</li>
</ul>
<h5 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h5><p>location [&#x3D;|||^] &#x2F;uri&#x2F; { … }<br>&#x3D; 开头表示精确匹配<br>^ 开头表示uri以某个常规字符串开头，理解为匹配 url路径即可。nginx不对url做编码，因此请求为&#x2F;static&#x2F;20%&#x2F; aa，可以被规则^~ &#x2F;static&#x2F; &#x2F;aa匹配到（注意是空格)<br>~ 开头表示区分大小写的正则匹配<br>~ 开头表示不区分大小写的正则匹配<br>!和!*分别为区分大小写不匹配及不区分大小写不匹配 的正则<br>&#x2F; 通用匹配，任何请求都会匹配到。<br>全局变量<br>$args<br>$content_length<br>$content_type<br>$document_root<br>$document_uri<br>$host<br>$http_user_agent<br>$http_cookie<br>$limit_rate<br>$request_body_file<br>$request_method<br>$remote_addr<br>$remote_port<br>$remote_user<br>$request_filename<br>$request_uri<br>$query</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="variable">$flag</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$host</span> = <span class="string">&#x27;1.com&#x27;</span>)&#123;</span><br><span class="line">    <span class="built_in">set</span> <span class="variable">$flag</span> <span class="string">&quot;<span class="variable">$</span>&#123;flag&#125;1&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$http_user_agent</span> ~* <span class="string">&quot;iPhone|iPod|Android|ios|iPad&quot;</span> )&#123;</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$flag</span> <span class="string">&quot;<span class="variable">$</span>&#123;flag&#125;2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$flag</span> = <span class="string">&quot;012&quot;</span>)&#123;</span><br><span class="line">    rewrite ^/(.*)<span class="variable">$</span> http://www.baidu.com/<span class="variable">$</span> last;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">如果ip是xxx,访问www.xxx.com/?pass 可以,否则屏蔽</span><br><span class="line"><span class="built_in">set</span> <span class="variable">$flag</span> f;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$remote_addr</span> = <span class="string">&#x27;118.114.245.37&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$flag</span> <span class="string">&quot;<span class="variable">$</span>&#123;flag&#125;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$args</span> !~* <span class="string">&#x27;pass&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$flag</span> <span class="string">&quot;<span class="variable">$</span>&#123;flag&#125;2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">if</span> ( <span class="operator">-f</span> <span class="variable">$request_filename</span> ) &#123;</span><br><span class="line">       <span class="built_in">set</span> <span class="variable">$flag</span> <span class="string">&quot;<span class="variable">$</span>&#123;flag&#125;3&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$flag</span> = <span class="string">&#x27;f12&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">444</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>香港图片缓存排除https跳转</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> ( $http_from_https != &#x27;on&#x27; )&#123;</span><br><span class="line">    <span class="built_in">rewrite</span>  (.*)\.(jpg|<span class="type">jpeg</span>|<span class="type">gif</span>|<span class="type">exe</span>|<span class="type">rar</span>|<span class="type">zip</span>|<span class="type">mpr</span>|<span class="type">doc</span>|<span class="type">xls</span>|<span class="type">xlsx</span>|<span class="type">bmp</span>|<span class="type">png</span>|<span class="type">tar</span>.gz|<span class="type">tgz</span>|<span class="type">wmv</span>|<span class="type">ppt</span>|<span class="type">mp4</span>|<span class="type">mp3</span>|<span class="type">avi</span>|<span class="type">rmvb</span>|<span class="type">mpeg</span>|<span class="type">apk</span>|<span class="type">sga</span>|<span class="type">sis</span>|<span class="type">sisx</span>|<span class="type">ipa</span>|<span class="type">dpk</span>|<span class="type">app</span>|<span class="type">jad</span>|<span class="type">tar</span>|<span class="type">jar</span>)$  http://$host.img<span class="number">.800</span>cdn.com$<span class="number">1.</span>$<span class="number">2</span> </span><br><span class="line"></span><br><span class="line">? break;</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;rule name=<span class="string">&quot;301&quot;</span> stopProcessing=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">match</span> url=<span class="string">&quot;^(.*)$&quot;</span> ignoreCase=<span class="string">&quot;false&quot;</span> /&gt;</span><br><span class="line">  &lt;conditions logicalGrouping=<span class="string">&quot;MatchAny&quot;</span>&gt;                       </span><br><span class="line">  &lt;add input=<span class="string">&quot;&#123;HTTP_X_FORWARDED_PROTO&#125;&quot;</span> <span class="built_in">pattern</span>=<span class="string">&quot;^https$&quot;</span> negate=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">  &lt;add input=<span class="string">&quot;&#123;HTTP_FROM_HTTPS&#125;&quot;</span> <span class="built_in">pattern</span>=<span class="string">&quot;^on$&quot;</span> negate=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">  &lt;add input=<span class="string">&quot;&#123;HTTPS&#125;&quot;</span> <span class="built_in">pattern</span>=<span class="string">&quot;^on$&quot;</span> negate=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">  &lt;/conditions&gt;</span><br><span class="line">  &lt;action type=<span class="string">&quot;Redirect&quot;</span> url=<span class="string">&quot;https://www.china-ex.hk/&#123;R:1&#125;&quot;</span> redirectType=<span class="string">&quot;Permanent&quot;</span> /&gt;</span><br><span class="line">  &lt;/rule&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>rewrite</category>
      </categories>
      <tags>
        <tag>rewrite</tag>
      </tags>
  </entry>
  <entry>
    <title>win7系统下Update更新出现错误代码80073712的解决方法</title>
    <url>/2023/12/18/win7%E7%B3%BB%E7%BB%9F%E4%B8%8BUpdate%E6%9B%B4%E6%96%B0%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%8180073712%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>随着电脑的使用率越来越高，我们有时候可能会遇到win7系统Windows Update更新出现80073712错误的问题，如果我们遇到了win7系统Windows Update更新出现80073712错误的问题，要怎么处理win7系统Windows Update更新出现80073712错误呢？</p>
</blockquote>
<span id="more"></span>
<h5 id="1-确认一下更新服务是否正常"><a href="#1-确认一下更新服务是否正常" class="headerlink" title="1 .确认一下更新服务是否正常"></a>1 .确认一下更新服务是否正常</h5><p>首先在键盘上按“Win+R”输入打开“运行”窗口，输入“services.msc”命令回车打开服务窗口;  </p>
<h5 id="2-然后分别检查Background-Intelligent-Transfer-Service服务、Cryptographic服务、Software-Protection服务、Windows-Update服务"><a href="#2-然后分别检查Background-Intelligent-Transfer-Service服务、Cryptographic服务、Software-Protection服务、Windows-Update服务" class="headerlink" title="2 .然后分别检查Background Intelligent Transfer Service服务、Cryptographic服务、Software Protection服务、Windows Update服务"></a>2 .然后分别检查Background Intelligent Transfer Service服务、Cryptographic服务、Software Protection服务、Windows Update服务</h5><p>确保对应的“状态”栏是否都处于“已启动”，如果发现以上某服务被“禁用”，将其设置为启动，具体操作为：鼠标右击服务选择“启动”即可。然后尝试是否能正常更新。</p>
<h5 id="3-如果还不行的话，就对SoftwareDistribution文件夹进行重命名"><a href="#3-如果还不行的话，就对SoftwareDistribution文件夹进行重命名" class="headerlink" title="3. 如果还不行的话，就对SoftwareDistribution文件夹进行重命名"></a>3. 如果还不行的话，就对SoftwareDistribution文件夹进行重命名</h5><p>首先在服务中禁用Windows Update服务后，打开C:&#x2F;Windows目录，在SoftwareDistribution上右键选择重命名，重命名完成后重新启用Windows Update服务，然后尝试是否能正常更新。</p>
<h5 id="4-还不行的话就对组件进行修复。"><a href="#4-还不行的话就对组件进行修复。" class="headerlink" title="4. 还不行的话就对组件进行修复。"></a>4. 还不行的话就对组件进行修复。</h5><ul>
<li>首先按“Win+R”输入打开“运行”窗口，输入“cmd”命令后按回车，打开命令提示符;</li>
<li>然后输入以下指令即可。<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">dism/Online <span class="string">/Cleanup-Image</span> <span class="string">/CheckHealth</span></span><br><span class="line">dism/Online <span class="string">/Cleanup-Image</span> <span class="string">/RestoreHealth</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>多线程，多进程，携程，异步</title>
    <url>/2023/12/18/%E5%A4%9A%E7%BA%BF%E7%A8%8B%EF%BC%8C%E5%A4%9A%E8%BF%9B%E7%A8%8B%EF%BC%8C%E6%90%BA%E7%A8%8B%EF%BC%8C%E5%BC%82%E6%AD%A5/</url>
    <content><![CDATA[<h4 id="multiprocessing-多进程"><a href="#multiprocessing-多进程" class="headerlink" title="multiprocessing 多进程"></a>multiprocessing 多进程</h4><blockquote>
<p>multiprocessing是一个用于产生多进程的包，与threading模块的API类似。multiprocessing既可以实现本地的多进程，也可以实现远程的多进程。通过使用多个子进程而非线程可以绕开Python的全局解释器锁(GIL)，同时允许在多种系统平台使用</p>
</blockquote>
<span id="more"></span>
<h5 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line">import multiprocessing as mp</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">def <span class="built_in">info</span>(title):</span><br><span class="line">    <span class="built_in">print</span>(title)</span><br><span class="line">    <span class="built_in">print</span>(f<span class="string">&#x27;父进程:&#123;os.getppid()&#125;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(f<span class="string">&#x27;进程:&#123;os.getpid()&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">def func(name):</span><br><span class="line">    <span class="built_in">info</span>(<span class="string">&#x27;function func&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>,name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="attribute">__name__</span>==&#x27;__main__&#x27;:</span><br><span class="line">    <span class="built_in">info</span>(<span class="string">&#x27;main line&#x27;</span>)</span><br><span class="line">    <span class="attribute">p</span>=mp.Process(target=func,args=(&#x27;gdd&#x27;,))</span><br><span class="line">    p.start()</span><br><span class="line">    p.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在Python中，进程是通过multiprocessing多进程模块来创建的，multiprocessing模块提供了⼀个Process类来创建进程对象。Process类可以单独调用，也可以继承使用。主要操作如下：  </p>
<ol>
<li>Process.start() 启动子进程</li>
<li>Process.join() 等待子进程结束(阻塞等待)</li>
<li>Process.is_alive() 判断子进程是否在运行(运行中返回True)</li>
<li>Process.close() 结束子进程(不推荐使用，会抛出异常)<br>根据不同的平台， multiprocessing支持三种启动进程的方法。这些启动方法有:  </li>
<li>spawn:父进程会启动一个全新的Python解释器进程。子进程将只继承那些运行进程对象的run()方法所必需的资源。 特别地，来自父进程的非必需文件描述符和句柄将不会被继承。 使用此方法启动进程相比使用fork或 forkserver要慢上许多。可在Unix和Windows上使用。 Windows上的默认设置</li>
<li>fork:父进程使用os.fork()来产生Python解释器分叉。子进程在开始时实际上与父进程相同。父进程的所有资源都由子进程继承。请注意，安全分叉多线程进程是棘手的。只存在于Unix。Unix中的默认值</li>
<li>forkserver:程序启动并选择forkserver启动方法时，将启动服务器进程。从那时起，每当需要一个新进程时，父进程就会连接到服务器并请求它分叉一个新进程。分叉服务器进程是单线程的，因此使用os.fork()是安全的。没有不必要的资源被继承。可在Unix平台上使用，支持通过Unix管道传递文件描述符<br>要选择一个启动方法，你应该在主模块的if <strong>name</strong> &#x3D;&#x3D; ‘<strong>main</strong>‘子句中调用 set_start_method()。  <figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    multiprocessing<span class="selector-class">.set_start_method</span>(<span class="string">&#x27;spawn&#x27;</span>)</span><br><span class="line">    <span class="built_in">info</span>(<span class="string">&#x27;main line&#x27;</span>)</span><br><span class="line">    <span class="selector-tag">p</span> = <span class="built_in">Process</span>(target=func, args=(<span class="string">&#x27;gdd&#x27;</span>,))</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-class">.start</span>()</span><br><span class="line">    <span class="selector-tag">p</span><span class="selector-class">.join</span>()</span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="POOL"><a href="#POOL" class="headerlink" title="POOL"></a>POOL</h5><blockquote>
<p>当需要创建的⼦进程数量不多时， 可以直接利⽤multiprocessing.Process动态生成多个进程， 但如果要创建很多进程时，⼿动创建的话⼯作量会非常大，此时就可以⽤到multiprocessing模块提供的Pool去创建一个进程池。当需要创建的⼦进程数量不多时， 可以直接利⽤multiprocessing.Process动态生成多个进程， 但如果要创建很多进程时，⼿动创建的话⼯作量会非常大，此时就可以⽤到multiprocessing模块提供的Pool去创建一个进程池。使用进程池的好处就是可以，创建有限的进程来自动并行处理大量的任务。Pool类的主要方法:</p>
</blockquote>
<ol>
<li>Pool.apply()启动任务(阻塞等待任务完成)</li>
<li>Pool.map()批量启动任务(阻塞等待所有任务完成)</li>
<li>Pool.apply_async()启动任务(非阻塞)</li>
<li>Pool.map_async()批量启动任务(非阻塞)</li>
</ol>
<h5 id="QUEUE"><a href="#QUEUE" class="headerlink" title="QUEUE"></a>QUEUE</h5><blockquote>
<p>Queue创建共享的进程队列，是多进程安全的队列，可以使用Queue实现多进程之间的数据传递。通常在生产者消费者模式中经常使用，一个进程向队列中写数据，另一个进程从队列中取数据。无论主进程或子进程，都能访问到队列，放进去的对象都经过了深拷贝</p>
</blockquote>
<p>Queue([maxsize]:返回一个使用一个管道和少量锁和信号量实现的共享队列实例。当一个进程将一个对象放进队列中时，一个写入线程会启动并将对象从缓冲区写入管道中。Queue模块的方法有：  </p>
<ol>
<li>qsize()：返回当前队列包含的消息数量；</li>
<li>empty()：如果队列为空，返回True，反之False ；</li>
<li>full()：如果队列满了，返回True,反之False；</li>
<li>get():获取队列中的一条消息，然后将其从列队中移除，可传参超时时长；</li>
<li>get_nowait()：相当Queue.get(False),取不到值时触发异常：Empty；</li>
<li>put():将一个值添加进数列，可传参超时时长；</li>
<li>put_nowait():相当于Queue.get(False),当队列满了时报错：Full；</li>
</ol>
<h5 id="共享内存"><a href="#共享内存" class="headerlink" title="共享内存"></a>共享内存</h5><h6 id="进程锁"><a href="#进程锁" class="headerlink" title="进程锁"></a>进程锁</h6><blockquote>
<p>进程锁和线程锁的用法基本一致。进程锁的诞生是为了避免多进程之间抢占共享数据，进而造成多进程之间混乱修改共享内存的局面</p>
</blockquote>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>查询mssql对应bak版本</title>
    <url>/2023/12/18/%E6%9F%A5%E8%AF%A2mssql%E5%AF%B9%E5%BA%94bak%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<blockquote>
<p>SQLServer 的备份文件是以.bak 为后缀的文件，如果想要通过备份文件查看数据库版本，通常的做法就是把数据库还原，但是在还原的过程，如果不是相同的数据库版本，就会导致无法还原；<br>在数据库中，低版本的备份文件是可以还原到高版本的数据库中，高的就不可以了，比如SQLSERVER 2008 的备份文件可以在SQLSERVER 2012 中还原，2012就不能在2008中还原</p>
</blockquote>
<span id="more"></span>

<p>这时候，我们就可以用一段脚本来查看，如下：<br><code>RESTORE HEADERONLY  FROM DISK =&#39;D:\mssqlupload\53office_data.bak&#39; WITH NOUNLOAD;</code><br><img src="/2023/12/18/%E6%9F%A5%E8%AF%A2mssql%E5%AF%B9%E5%BA%94bak%E7%89%88%E6%9C%AC/image.jpg"></p>
]]></content>
      <categories>
        <category>mssql</category>
      </categories>
      <tags>
        <tag>mssql</tag>
      </tags>
  </entry>
  <entry>
    <title>批处理查找畸形文件并删除</title>
    <url>/2023/12/15/%E6%89%B9%E5%A4%84%E7%90%86%E6%9F%A5%E6%89%BE%E7%95%B8%E5%BD%A2%E6%96%87%E4%BB%B6%E5%B9%B6%E5%88%A0%E9%99%A4/</url>
    <content><![CDATA[<h3 id="批处理查找畸形文件并删除"><a href="#批处理查找畸形文件并删除" class="headerlink" title="批处理查找畸形文件并删除"></a>批处理查找畸形文件并删除</h3><span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line">title 畸形文件查杀</span><br><span class="line">::文件匹配正则</span><br><span class="line">set &quot;reg=\\nul \\nul\.[^\\]* \\com[1-9] \\com[1-9]\.[^\\]* \\aux \\aux\.[^\\]* \\con \\con\.[^\\]* \\prn \\prn\.[^\\]* \.&quot;</span><br><span class="line">::设置窗口颜色</span><br><span class="line">color 6b</span><br><span class="line">::检测路径是否存在</span><br><span class="line">:checkexist</span><br><span class="line">set /p dir=请输入需要查杀的路径:</span><br><span class="line">if &quot;%dir%&quot; ==&quot;&quot; (</span><br><span class="line">echo 输入为空，请重新输入</span><br><span class="line">call :checkexist</span><br><span class="line">)else (</span><br><span class="line">call :listdir</span><br><span class="line">)</span><br><span class="line">::列出畸形文件名和所在目录</span><br><span class="line">:listdir</span><br><span class="line">cd /d %dir%</span><br><span class="line">for /f &quot;delims=&quot; %%i in (&#x27;dir /b /a /s ^| findstr /i /r /e &quot;%reg%&quot;&#x27;) do (</span><br><span class="line">    echo  &quot;%%i&quot;</span><br><span class="line">    rd /s /q &quot;\\?\%%i&quot;</span><br><span class="line">    del /q /f /a &quot;\\?\%%i&quot;</span><br><span class="line">    echo 已经删除</span><br><span class="line">    pause</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>bat</category>
      </categories>
      <tags>
        <tag>bat</tag>
      </tags>
  </entry>
  <entry>
    <title>装饰器</title>
    <url>/2023/12/18/%E8%A3%85%E9%A5%B0%E5%99%A8/</url>
    <content><![CDATA[<blockquote>
<p>python中的装饰器(decorator)一般采用语法糖的形式，是一种语法格式。<br>比如：@classmethod，@staticmethod，@property，@xxx.setter，@wraps()，@func_name等都是python中的装饰器</p>
</blockquote>
<span id="more"></span>
<p>装饰器本质上是一个Python函数(其实就是闭包)，它可以让其他函数在不需要做任何代码变动的前提下增加额外功能，装饰器的返回值也是一个函数对象。装饰器用于有以下场景，比如:插入日志、性能测试、事务处理、缓存、权限校验等场景</p>
<hr>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">import <span class="selector-tag">time</span></span><br><span class="line">import threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def <span class="built_in">how_much_time</span>(func):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;how_much_time&quot;</span>)</span><br><span class="line">    def <span class="built_in">inner</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;how_much_time start&quot;</span>)</span><br><span class="line">        start_time = time.<span class="built_in">time</span>()</span><br><span class="line">        <span class="built_in">func</span>()</span><br><span class="line">        end_time = time.<span class="built_in">time</span>()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;一共花了&#123;0&#125;时间&quot;</span>.<span class="built_in">format</span>(end_time - start_time))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;how_much_time end&quot;</span>)</span><br><span class="line">    return inner</span><br><span class="line"></span><br><span class="line">def <span class="built_in">another_info</span>(func):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;another_info&quot;</span>)</span><br><span class="line">    def <span class="built_in">inner_1</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;another_info start&quot;</span>)</span><br><span class="line">        <span class="built_in">func</span>()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;another_info end&quot;</span>)</span><br><span class="line">    return inner_1</span><br><span class="line"></span><br><span class="line">@how_much_time</span><br><span class="line">@another_info</span><br><span class="line">def <span class="built_in">sleep_5</span>():</span><br><span class="line">    time.<span class="built_in">sleep</span>(<span class="number">5</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%d结束了&quot;</span> % (<span class="number">5</span>, ))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1=threading.<span class="built_in">Thread</span>(target=sleep_5)</span><br><span class="line">t1.<span class="built_in">start</span>()</span><br></pre></td></tr></table></figure>
<p>执行结果如下：<br>another_info<br>how_much_time<br>how_much_time start<br>another_info start<br>5结束了<br>another_info end<br>一共花了5.003912687301636时间<br>how_much_time end</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>高并发踩过的坑及性能优化</title>
    <url>/2023/12/20/%E9%AB%98%E5%B9%B6%E5%8F%91%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%E5%8F%8A%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<blockquote>
<p>Linux 操作系统是现在服务器的首选操作系统，在 Linux 的默认系统参数下，Linux 针对高并发的支持性并不是很好。小编从事 Linux 下应用程序开发多年，关于 Linux 系统下的高并发，小编自己踩过的坑，及如何解决踩过的坑下面列上几条，供大家参考，避免再次掉坑。</p>
</blockquote>
<span id="more"></span>
<h5 id="Linux-应用运行过程中出现-Too-many-open-files-问题分析和解决"><a href="#Linux-应用运行过程中出现-Too-many-open-files-问题分析和解决" class="headerlink" title="Linux 应用运行过程中出现 Too many open files 问题分析和解决"></a>Linux 应用运行过程中出现 Too many open files 问题分析和解决</h5><p><img src="/2023/12/20/%E9%AB%98%E5%B9%B6%E5%8F%91%E8%B8%A9%E8%BF%87%E7%9A%84%E5%9D%91%E5%8F%8A%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/1703040445980.jpg"><br>出现这句提示的原因是程序打开的文件 socket 连接数量超过系统设定值。<br>查看每个用户最大允许打开的文件数量  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -a</span><br></pre></td></tr></table></figure>
<p>其中 open files (-n) 1024 表示每个用户最大允许打开的文件数量是 1024<br>当前系统文件句柄的最大数目，只用于查看，不能设置修改</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cat <span class="regexp">/proc/</span>sys<span class="regexp">/fs/</span><span class="keyword">file</span>-max</span><br></pre></td></tr></table></figure>
<p>查看某个进程的打开文件限制数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> /proc/10446(pid)/limits</span><br></pre></td></tr></table></figure>
<p>设置 open files 数值方法</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ulimit</span> -n <span class="number">65535</span></span><br></pre></td></tr></table></figure>
<p>这种设置方法在重启后会还原为默认值。<br>永久设置方法：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/security/limits.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>在最后加入</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>soft nofile 65535</span><br><span class="line"><span class="bullet">* </span>hard nofile 65535</span><br></pre></td></tr></table></figure>
<p>生效需要重启系统<br>这样修改之后，问题得到有效解决。</p>
<h5 id="Linux-高并发下-time-wait-过多的问题分析及解决"><a href="#Linux-高并发下-time-wait-过多的问题分析及解决" class="headerlink" title="Linux 高并发下 time_wait 过多的问题分析及解决"></a>Linux 高并发下 time_wait 过多的问题分析及解决</h5><p>现象是高并发场景下，服务器运行应用卡顿。<br>排查方法：查看服务器配置</p>
<figure class="highlight cos"><table><tr><td class="code"><pre><span class="line">netstat -ant|awk &#x27;/<span class="symbol">^tcp</span>/ &#123;++<span class="keyword">S</span>[<span class="built_in">$NF</span>]&#125; END &#123;<span class="keyword">for</span>(a in <span class="keyword">S</span>) <span class="keyword">print</span> (a,<span class="keyword">S</span>[a])&#125;&#x27;</span><br></pre></td></tr></table></figure>
<p>发现处于 time_wait 的数量太多，有几万条，应该是大量 socket 处于 TIME_WAIT 状态。如果客户端的并发量持续很高，此时部分客户端就会显示连接不上。TCP 连接状态描述：</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CLOSED：无连接是活动的或正在进行</span></span><br><span class="line"><span class="keyword"></span>LISTEN：服务器在等待进入呼叫</span><br><span class="line">SYN_RECV：一个连接请求已经到达，等待确认</span><br><span class="line">SYN_SENT：应用已经开始，打开一个连接</span><br><span class="line">ESTABLISHED：正常数据传输状态</span><br><span class="line">FIN_WAIT1：应用说它已经完成</span><br><span class="line">FIN_WAIT2：另一边已同意释放</span><br><span class="line">ITMED_WAIT：等待所有分组死掉</span><br><span class="line"><span class="keyword">CLOSING：两边同时尝试关闭</span></span><br><span class="line"><span class="keyword"></span>TIME_WAIT：另一边已初始化一个释放</span><br><span class="line">LAST_ACK：等待所有分组死掉</span><br></pre></td></tr></table></figure>
<h5 id="TIME-WAIT-过多危害"><a href="#TIME-WAIT-过多危害" class="headerlink" title="TIME_WAIT 过多危害"></a>TIME_WAIT 过多危害</h5><p>网络情况不好时，如果主动方无 TIME_WAIT 等待，关闭前个连接后，主动方与被动方又建立起新的 TCP 连接，这时被动方重传或延时过来的 FIN 包过来后会直接影响新的 TCP 连接；同样网络情况不好并且无 TIME_WAIT 等待，关闭连接后无新连接，当接收到被动方重传或延迟的 FIN 包后，会给被动方回一个 RST 包，可能会影响被动方其它的服务连接。<br>针对如何解决 TIME_WAIT 过多这一问题，解答如下：<br>编辑内核文件&#x2F;etc&#x2F;sysctl.conf，加入以下内容：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">net.ipv4.tcp_syncookies</span> = <span class="number">1</span> <span class="comment">#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_tw_reuse</span> = <span class="number">1</span> <span class="comment">#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_tw_recycle</span> = <span class="number">1</span> <span class="comment">#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_fin_timeout</span> =<span class="number">30</span><span class="comment">#修改系默认的 TIMEOUT 时间</span></span><br></pre></td></tr></table></figure>
<p>然后执行 &#x2F;sbin&#x2F;sysctl -p 让参数生效.<br>简单来说，就是打开系统的 TIMEWAIT 重用和快速回收。</p>
<h5 id="Linux-更多性能优化"><a href="#Linux-更多性能优化" class="headerlink" title="Linux 更多性能优化"></a>Linux 更多性能优化</h5><p>如果您的系统的连接数本身就很多，如果以上配置调优后性能还不理想，可以再优化一下 TCP 的可使用端口范围，进一步提升服务器的并发能力。依然是&#x2F;etc&#x2F;sysctl.conf 文件中，加入下面这些配置：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">vi</span> /etc/sysctl.conf</span><br><span class="line"><span class="comment">#表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。</span></span><br><span class="line"><span class="attribute">net</span>.ipv4.tcp_keepalive_time = <span class="number">1200</span> </span><br><span class="line"><span class="comment">#表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。</span></span><br><span class="line"><span class="attribute">net</span>.ipv4.ip_local_port_range = <span class="number">1024</span> <span class="number">65000</span> </span><br><span class="line"><span class="comment">#表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。</span></span><br><span class="line"><span class="attribute">net</span>.ipv4.tcp_max_syn_backlog = <span class="number">8192</span> </span><br><span class="line"><span class="comment">#表示系统同时保持TIME_WAIT套接字的最大数量，如果超过这个数字，TIME_WAIT套接字将立刻被清除并打印警告信息。默认为180000，改为5000。对于Apache、Nginx等服务器，上几行的参数可以很好地减少TIME_WAIT套接字数量，但是对于 Squid，效果却不大。此项参数可以控制TIME_WAIT套接字的最大数量，避免Squid服务器被大量的TIME_WAIT套接字拖死。</span></span><br><span class="line"><span class="attribute">net</span>.ipv4.tcp_max_tw_buckets = <span class="number">5000</span> </span><br></pre></td></tr></table></figure>
<h5 id="Linux-内核更多参数优化说明"><a href="#Linux-内核更多参数优化说明" class="headerlink" title="Linux 内核更多参数优化说明"></a>Linux 内核更多参数优化说明</h5><p>vim &#x2F;etc&#x2F;sysctl.conf<br><strong>1. net.ipv4.tcp_max_syn_backlog &#x3D; 65536</strong><br>记录的那些尚未收到客户端确认信息的连接请求的最大值。对于超过 128M 内存的系统而言，缺省值是 1024，低于 128M 小内存的系统则是 128。<br>SYN Flood 攻击利用 TCP 协议散布握手的缺陷，伪造虚假源 IP 地址发送大量 TCP-SYN 半打开连接到目标系统，最终导致目标系统 Socket 队列资源耗尽而无法接受新的连接。为了应付这种攻击，现代 Unix 系统中普遍采用多连接队列处理的方式来缓冲(而不是解决)这种攻击，是用一个基本队列处理正常的完全连接应用(Connect()和 Accept() )，是用另一个队列单独存放半打开连接。<br>这种双队列处理方式和其他一些系统内核措施(例如 Syn-Cookies&#x2F;Caches)联合应用时，能够比较有效的缓解小规模的 SYN Flood 攻击(事实证明&lt;1000p&#x2F;s)加大 SYN 队列长度可以容纳更多等待连接的网络连接数，一般遭受 SYN Flood 攻击的网站，都存在大量 SYN_RECV 状态，所以调大 tcp_max_syn_backlog 值能增加抵抗 syn 攻击的能力。<br><strong>2. net.core.netdev_max_backlog &#x3D; 32768</strong><br>每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目。<br><strong>3. net.core.somaxconn &#x3D; 32768</strong><br>调整系统同时发起并发 TCP 连接数，可能需要提高连接储备值，以应对大量突发入局连接请求的情况。如果同时接收到大量连接请求，使用较大的值会提高受支持的暂挂连接的数量，从而可减少连接失败的数量。大的侦听队列对防止 DDoS 攻击也会有所帮助。挂起请求的最大数量默认是 128。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">查看实时内核实时丢包命令：</span><br><span class="line"></span><br><span class="line">netstat-<span class="keyword">su</span></span><br></pre></td></tr></table></figure>
<p>位置：&#x2F;proc&#x2F;sys&#x2F;<br><strong>4. net.core.wmem_default &#x3D; 8388608</strong><br>该参数指定了发送套接字缓冲区大小的缺省值(以字节为单位)<br><strong>5. net.core.rmem_default &#x3D; 8388608</strong><br>该参数指定了接收套接字缓冲区大小的缺省值(以字节为单位)<br><strong>6. net.core.rmem_max &#x3D; 16777216</strong><br>该参数指定了接收套接字缓冲区大小的最大值(以字节为单位)<br><strong>7. net.core.wmem_max &#x3D; 16777216</strong><br>该参数指定了发送套接字缓冲区大小的最大值(以字节为单位)<br><strong>8. net.ipv4.tcp_timestamps &#x3D; 0</strong><br>Timestamps 可以防范那些伪造的 sequence 号码。一条 1G 的宽带线路或许会重遇到带 out-of-line 数值的旧 sequence 号码(假如它是由于上次产生的)。时间戳能够让内核接受这种“异常”的数据包。这里需要将其关掉,以提高性能。<br><strong>9. net.ipv4.tcp_synack_retries &#x3D; 2</strong><br>对于远端的连接请求 SYN，内核会发送 SYN＋ACK 数据报，以确认收到上一个 SYN 连接请求包。这是所谓的三次握手(threeway handshake)机制的第二个步骤。这里决定内核在放弃连接之前所送出的 SYN+ACK 数目。不应该大于 255，默认值是 5，对应于 180 秒左右时间。(可以根据 tcp_syn_retries 来决定这个值)<br><strong>10. net.ipv4.tcp_syn_retries &#x3D; 2</strong><br>对于一个新建连接，内核要发送多少个 SYN 连接请求才决定放弃。不应该大于 255，默认值是 5，对应于 180 秒左右时间。(对于大负载而物理通信良好的网络而言,这个值偏高,可修改为 2.这个值仅仅是针对对外的连接,对进来的连接,是由 tcp_retries1 决定的)<br>#net.ipv4.tcp_tw_len &#x3D; 1<br><strong>11. net.ipv4.tcp_tw_reuse &#x3D; 1</strong><br>表示开启重用，允许将 TIME-WAIT Sockets 重新用于新的 TCP 连接，默认为 0，表示关闭。这个对快速重启动某些服务,而启动后提示端口已经被使用的情形非常有帮助。<br><strong>12. net.ipv4.tcp_mem &#x3D; 94500000 915000000 927000000</strong><br>tcp_mem 有 3 个 INTEGER 变量：low, pressure, high<br>low：当 TCP 使用了低于该值的内存页面数时，TCP 没有内存压力，TCP 不会考虑释放内存。(理想情况下，这个值应与指定给 tcp_wmem 的第 2 个值相匹配。这第 2 个值表明，最大页面大小乘以最大并发请求数除以页大小 (131072<em>300&#x2F;4096)<br>pressure：当 TCP 使用了超过该值的内存页面数量时，TCP 试图稳定其内存使用，进入 pressure 模式，当内存消耗低于 low 值时则退出 pressure 状态。(理想情况下这个值应该是 TCP 可以使用的总缓冲区大小的最大值(204800</em>300&#x2F;4096)<br>high：允许所有 TCP Sockets 用于排队缓冲数据报的页面量。如果超过这个值，TCP 连接将被拒绝，这就是为什么不要令其过于保守(512000*300&#x2F;4096)的原因了。在这种情况下，提供的价值很大，它能处理很多连接，是所预期的 2.5 倍；或者使现有连接能够传输 2.5 倍的数据。<br>一般情况下这些值是在系统启动时根据系统内存数量计算得到的。<br><strong>13. net.ipv4.tcp_max_orphans &#x3D; 3276800</strong><br>系统所能处理不属于任何进程的 TCP sockets 最大数量。假如超过这个数量﹐那么不属于任何进程的连接会被立即 reset，并同时显示警告信息。之所以要设定这个限制﹐纯粹为了抵御那些简单的 DoS 攻击﹐千万不要依赖这个或是人为的降低这个限制<br><strong>14. net.ipv4.tcp_fin_timeout &#x3D; 30</strong><br>如果套接字由本端要求关闭，这个参数决定了它保持在 FIN-WAIT-2 状态的时间。对端可以出错并永远不关闭连接，甚至意外当机。缺省值是 60 秒。2.2 内核的通常值是 180 秒，你可以按这个设置，但要记住的是，即使你的机器是一个轻载的 WEB 服务器，也有因为大量的死套接字而内存溢出的风险，FIN-WAIT-2 的危险性比 FIN-WAIT-1 要小，因为它最多只能吃掉 1.5K 内存，但是它们的生存期长些。<br><strong>15.net.ipv4.ip_conntrack_max &#x3D; 10000</strong><br>设置系统对最大跟踪的 TCP 连接数的限制(CentOS 5.6 无此参数)<br>同时还涉及到一个 TCP 拥塞算法的问题，你可以用下面的命令查看本机提供的拥塞算法控制模块：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">sysctlnet.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>对于几种算法的分析，详情可以参考下：TCP 拥塞控制算法的优缺点、适用环境、性能分析，比如高延时可以试用 hybla，中等延时可以试用 htcp 算法等。<br>如果想设置 TCP 拥塞算法为 hybla</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#设置TCP 拥塞算法</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_congestion_control</span>=hybla</span><br></pre></td></tr></table></figure>
<p>对于内核版高于于 3.7.1 的，我们可以开启 tcp_fastopen：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开启tcp_fastopen</span></span><br><span class="line"><span class="attr">net.ipv4.tcp_fastopen</span>= <span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 Linux/Unix/Windows 中发现隐藏的进程和端口</title>
    <url>/2023/12/15/%E5%A6%82%E4%BD%95%E5%9C%A8%20LinuxUnixWindows%20%E4%B8%AD%E5%8F%91%E7%8E%B0%E9%9A%90%E8%97%8F%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%92%8C%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<h4 id="如何在-Linux-Unix-Windows-中发现隐藏的进程和端口"><a href="#如何在-Linux-Unix-Windows-中发现隐藏的进程和端口" class="headerlink" title="如何在 Linux&#x2F;Unix&#x2F;Windows 中发现隐藏的进程和端口"></a>如何在 Linux&#x2F;Unix&#x2F;Windows 中发现隐藏的进程和端口</h4><span id="more"></span>
<blockquote>
<p>unhide 是一个小巧的网络取证工具，能够发现那些借助 rootkit、LKM 及其它技术隐藏的进程和 TCP&#x2F;UDP 端口。这个工具在 Linux、UNIX 类、MS-Windows 等操作系统下都可以工作。<br>根据其 man 页面的说明：</p>
<blockquote>
<p>Unhide 通过下述三项技术来发现隐藏的进程。<br>进程相关的技术，包括将 &#x2F;proc 目录与 &#x2F;bin&#x2F;ps[1] 命令的输出进行比较。<br>系统相关的技术，包括将 &#x2F;bin&#x2F;ps[2] 命令的输出结果同从系统调用方面得到的信息进行比较。<br>穷举法相关的技术，包括对所有的进程 ID 进行暴力求解，该技术仅限于在基于 Linux2.6 内核的系统中使用。</p>
</blockquote>
</blockquote>
<h5 id="如何安装-unhide"><a href="#如何安装-unhide" class="headerlink" title="如何安装 unhide"></a>如何安装 unhide</h5><p>首先建议你在只读介质上运行这个工具。如果使用的是 Ubuntu 或者 Debian 发行版，输入下述的 apt-get 命令以安装 Unhide<br><code>$ sudo apt-get install unhide</code><br>一切顺利的话你的命令行会输出以下内容  </p>
<figure class="highlight plaintext"><figcaption><span>password for vivek:</span></figcaption><table><tr><td class="code"><pre><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">Suggested packages:</span><br><span class="line">  rkhunter</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  unhide</span><br><span class="line">0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.</span><br><span class="line">Need to get 46.6 kB of archives.</span><br><span class="line">After this operation, 136 kB of additional disk space will be used.</span><br><span class="line">Get:1 http://in.archive.ubuntu.com/ubuntu artful/universe amd64 unhide amd64 20130526-1 [46.6 kB]</span><br><span class="line">Fetched 46.6 kB in 0s (49.0 kB/s)</span><br><span class="line">Selecting previously unselected package unhide.</span><br><span class="line">(Reading database ... 205367 files and directories currently installed.)</span><br><span class="line">Preparing to unpack .../unhide_20130526-1_amd64.deb ...</span><br><span class="line">Unpacking unhide (20130526-1) ...</span><br><span class="line">Setting up unhide (20130526-1) ...</span><br><span class="line">Processing triggers for man-db (2.7.6.1-2) ...</span><br></pre></td></tr></table></figure>
<h5 id="如何在-RHEL-CentOS-Oracle-Scientific-Fedora-上安装-unhide"><a href="#如何在-RHEL-CentOS-Oracle-Scientific-Fedora-上安装-unhide" class="headerlink" title="如何在 RHEL&#x2F;CentOS&#x2F;Oracle&#x2F;Scientific&#x2F;Fedora 上安装 unhide"></a>如何在 RHEL&#x2F;CentOS&#x2F;Oracle&#x2F;Scientific&#x2F;Fedora 上安装 unhide</h5><p>入以下的 yum 命令（CentOS&#x2F;RHEL 6.x 或 7.x 上首先打开 EPEL 仓库）：<br><code>sudo yum install unhide</code><br>在 Fedora 上则使用以下 dnf 命令：<br><code>sudo dnf install unhide</code></p>
<h5 id="如何使用-unhide-工具？"><a href="#如何使用-unhide-工具？" class="headerlink" title="如何使用 unhide 工具？"></a>如何使用 unhide 工具？</h5><p>unhide 的语法是：<br><code>unhide [options] test_list</code><br>test_list 参数可以是以下测试列表中的一个或者多个标准测试：<br>brute<br>proc<br>procall<br>procfs<br>quick<br>reverse<br>sys<br>或基本测试：<br>checkbrute<br>checkchdir<br>checkgetaffinity<br>checkgetparam<br>checkgetpgid<br>checkgetprio<br>checkRRgetinterval<br>checkgetsched<br>checkgetsid<br>checkkill<br>checknoprocps<br>checkopendir<br>checkproc<br>checkquick<br>checkreaddir<br>checkreverse<br>checksysinfo<br>checksysinfo2<br>checksysinfo3<br>你可以通过以下示例命令使用 unhide：  </p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># unhide proc</span></span><br><span class="line"><span class="meta"># unhide sys</span></span><br><span class="line"><span class="meta"># unhide quick</span></span><br></pre></td></tr></table></figure>
<p>示例输出：  </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Unhide <span class="number">20130526</span></span><br><span class="line">Copyright © <span class="number">2013</span> Yago Jesus &amp; Patrick Gouin</span><br><span class="line">License GPLv3+ : GNU GPL <span class="keyword">version</span> <span class="number">3</span> <span class="built_in">or</span> <span class="keyword">later</span></span><br><span class="line">http://www.<span class="keyword">unhide</span>-forensics.info</span><br><span class="line">NOTE : This <span class="keyword">version</span> of <span class="keyword">unhide</span> <span class="keyword">is</span> <span class="keyword">for</span> systems using Linux &gt;= <span class="number">2.6</span> </span><br><span class="line">Used <span class="keyword">options</span>: </span><br><span class="line">[*]Searching <span class="keyword">for</span> Hidden processes through  comparison of results of <span class="built_in">system</span> calls, proc, dir <span class="built_in">and</span> <span class="keyword">ps</span></span><br></pre></td></tr></table></figure>
<h5 id="如何使用-unhide-tcp-工具辨明-TCP-UDP-端口的身份"><a href="#如何使用-unhide-tcp-工具辨明-TCP-UDP-端口的身份" class="headerlink" title="如何使用 unhide-tcp 工具辨明 TCP&#x2F;UDP 端口的身份"></a>如何使用 unhide-tcp 工具辨明 TCP&#x2F;UDP 端口的身份</h5><p>以下是来自 man 页面的介绍  </p>
<blockquote>
<p>unhide-tcp 取证工具通过对所有可用的 TCP&#x2F;IP 端口进行暴力求解的方式，辨别所有正在监听，却没有列入 &#x2F;bin&#x2F;netstat[9] 或者 &#x2F;bin&#x2F;ss[10] 命令输出的 TCP&#x2F;IP 端口身份。<br>注一：对于 FreeBSD、OpenBSD系统，一般使用 netstat 命令取代在这些操作系统上不存在的 iproute2，此外，sockstat 命令也用于替代 fuser。<br>注二：如果操作系统不支持 iproute2 命令，在使用 unhide 时需要在命令上加上 -n 或者 -s 选项。</p>
</blockquote>
<p><code>unhide-tcp</code><br>示例输出：  </p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">Unhide <span class="number">20100201</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//www.security-projects.com/?Unhide</span></span><br><span class="line">Starting TCP checking</span><br><span class="line">Starting UDP checking</span><br></pre></td></tr></table></figure>
<p>上述操作中，没有发现隐藏的端口。<br>但在下述示例中，我展示了一些有趣的事。  </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">unhide-tcp</span></span><br><span class="line"><span class="string">示例输出：</span></span><br><span class="line"><span class="string">Unhide</span> <span class="number">20100201</span></span><br><span class="line"><span class="string">http://www.security-projects.com/?Unhide</span></span><br><span class="line"><span class="string">Starting</span> <span class="string">TCP</span> <span class="string">checking</span></span><br><span class="line"><span class="attr">Found Hidden port that not appears in netstat:</span> <span class="number">1048</span></span><br><span class="line"><span class="attr">Found Hidden port that not appears in netstat:</span> <span class="number">1049</span></span><br><span class="line"><span class="attr">Found Hidden port that not appears in netstat:</span> <span class="number">1050</span></span><br><span class="line"><span class="string">Starting</span> <span class="string">UDP</span> <span class="string">checking</span></span><br></pre></td></tr></table></figure>
<p>可以看到 netstat -tulpn 和 ss 命令确实没有反映出这三个隐藏的端口：  </p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta"># netstat -tulpn | grep 1048</span></span><br><span class="line"><span class="meta"># ss -lp</span></span><br><span class="line"><span class="meta"># ss -l | grep 1048</span></span><br></pre></td></tr></table></figure>
<h5 id="Windows-用户如何安装使用-unhide"><a href="#Windows-用户如何安装使用-unhide" class="headerlink" title="Windows 用户如何安装使用 unhide"></a>Windows 用户如何安装使用 unhide</h5><p>你可以通过这个页面获取 Windows 版本的 unhide<br><a href="https://www.cyberciti.biz/tips/linux-unix-windows-find-hidden-processes-tcp-udp-ports.html">unhide</a></p>
]]></content>
      <categories>
        <category>tools</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
</search>
